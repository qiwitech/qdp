// Code generated by protoc-gen-gogo.
// source: api_service.proto
// DO NOT EDIT!

/*
Package apipb is a generated protocol buffer package.

Plutos API Service


It is generated from these files:
	api_service.proto

It has these top-level messages:
	Status
	TransferItem
	TransferRequest
	TransferResponse
	GetPrevHashRequest
	GetPrevHashResponse
	GetBalanceRequest
	GetBalanceResponse
	SettingsRequest
	SettingsResponse
	GetLastSettingsRequest
	GetLastSettingsResponse
	GetHistoryRequest
	GetHistoryResponse
	Txn
	Meta
	GetByMetaKeyRequest
	GetByMetaKeyResponse
	SearchMetaRequest
	SearchMetaResponse
	PutMetaRequest
	PutMetaResponse
*/
package apipb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
import _ "google.golang.org/genproto/googleapis/api/annotations"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// Response Status code
type TransferCode int32

const (
	TransferCode_OK                TransferCode = 0
	TransferCode_INVALID_PREV_HASH TransferCode = 1
	TransferCode_INVALID_SIGN      TransferCode = 2
	TransferCode_BAD_REQUEST       TransferCode = 3
	TransferCode_NO_BALANCE        TransferCode = 4
	TransferCode_INTERNAL_ERROR    TransferCode = 5
	TransferCode_RETRY             TransferCode = 7
	TransferCode_METADATA_ERROR    TransferCode = 8
)

var TransferCode_name = map[int32]string{
	0: "OK",
	1: "INVALID_PREV_HASH",
	2: "INVALID_SIGN",
	3: "BAD_REQUEST",
	4: "NO_BALANCE",
	5: "INTERNAL_ERROR",
	7: "RETRY",
	8: "METADATA_ERROR",
}
var TransferCode_value = map[string]int32{
	"OK":                0,
	"INVALID_PREV_HASH": 1,
	"INVALID_SIGN":      2,
	"BAD_REQUEST":       3,
	"NO_BALANCE":        4,
	"INTERNAL_ERROR":    5,
	"RETRY":             7,
	"METADATA_ERROR":    8,
}

func (x TransferCode) String() string {
	return proto.EnumName(TransferCode_name, int32(x))
}
func (TransferCode) EnumDescriptor() ([]byte, []int) { return fileDescriptorApiService, []int{0} }

// Status field.
// It's a part of every response.
type Status struct {
	// A simple error code that can be easily handled by the client.
	Code TransferCode `protobuf:"varint,1,opt,name=code,proto3,enum=api.TransferCode" json:"code,omitempty"`
	// A developer-facing human-readable error message in English. It should
	// both explain the error and offer an actionable resolution to it.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Additional error information that the client code can use to handle
	// the error, such as retry delay or a help link.
	Details []*google_protobuf.Any `protobuf:"bytes,3,rep,name=details" json:"details,omitempty"`
}

func (m *Status) Reset()                    { *m = Status{} }
func (m *Status) String() string            { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()               {}
func (*Status) Descriptor() ([]byte, []int) { return fileDescriptorApiService, []int{0} }

func (m *Status) GetCode() TransferCode {
	if m != nil {
		return m.Code
	}
	return TransferCode_OK
}

func (m *Status) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Status) GetDetails() []*google_protobuf.Any {
	if m != nil {
		return m.Details
	}
	return nil
}

// Receiver and amount item for TransferRequest.
type TransferItem struct {
	// Receiver ID
	Receiver uint64 `protobuf:"varint,1,opt,name=receiver,proto3" json:"receiver,omitempty"`
	// Amount to send to that Receiver
	Amount int64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (m *TransferItem) Reset()                    { *m = TransferItem{} }
func (m *TransferItem) String() string            { return proto.CompactTextString(m) }
func (*TransferItem) ProtoMessage()               {}
func (*TransferItem) Descriptor() ([]byte, []int) { return fileDescriptorApiService, []int{1} }

func (m *TransferItem) GetReceiver() uint64 {
	if m != nil {
		return m.Receiver
	}
	return 0
}

func (m *TransferItem) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

// Request to transfer value to one or more receivers
type TransferRequest struct {
	// Value Sender
	Sender uint64 `protobuf:"varint,1,opt,name=sender,proto3" json:"sender,omitempty"`
	// List of receiver IDs and amounts
	Batch []*TransferItem `protobuf:"bytes,2,rep,name=batch" json:"batch,omitempty"`
	// ID of actual account settings
	SettingsId uint64 `protobuf:"varint,3,opt,name=settings_id,json=settingsId,proto3" json:"settings_id,omitempty"`
	// Hash sum of the previous transaction (omit or "" if first)
	PrevHash string `protobuf:"bytes,4,opt,name=prev_hash,json=prevHash,proto3" json:"prev_hash,omitempty"`
	// Request Sign
	Sign string `protobuf:"bytes,5,opt,name=sign,proto3" json:"sign,omitempty"`
	// Optional metadata to save in metadb if enabled
	Metadata *Meta `protobuf:"bytes,6,opt,name=metadata" json:"metadata,omitempty"`
}

func (m *TransferRequest) Reset()                    { *m = TransferRequest{} }
func (m *TransferRequest) String() string            { return proto.CompactTextString(m) }
func (*TransferRequest) ProtoMessage()               {}
func (*TransferRequest) Descriptor() ([]byte, []int) { return fileDescriptorApiService, []int{2} }

func (m *TransferRequest) GetSender() uint64 {
	if m != nil {
		return m.Sender
	}
	return 0
}

func (m *TransferRequest) GetBatch() []*TransferItem {
	if m != nil {
		return m.Batch
	}
	return nil
}

func (m *TransferRequest) GetSettingsId() uint64 {
	if m != nil {
		return m.SettingsId
	}
	return 0
}

func (m *TransferRequest) GetPrevHash() string {
	if m != nil {
		return m.PrevHash
	}
	return ""
}

func (m *TransferRequest) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

func (m *TransferRequest) GetMetadata() *Meta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

// Response on TransferRequest
type TransferResponse struct {
	// Operation Status
	Status *Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	// Last transaction BatchID
	TxnId string `protobuf:"bytes,2,opt,name=txn_id,json=txnId,proto3" json:"txn_id,omitempty"`
	// Last transaction Hash
	// To use it in the next request
	Hash string `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	// Last Settings ID
	SettingsId uint64 `protobuf:"varint,4,opt,name=settings_id,json=settingsId,proto3" json:"settings_id,omitempty"`
}

func (m *TransferResponse) Reset()                    { *m = TransferResponse{} }
func (m *TransferResponse) String() string            { return proto.CompactTextString(m) }
func (*TransferResponse) ProtoMessage()               {}
func (*TransferResponse) Descriptor() ([]byte, []int) { return fileDescriptorApiService, []int{3} }

func (m *TransferResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *TransferResponse) GetTxnId() string {
	if m != nil {
		return m.TxnId
	}
	return ""
}

func (m *TransferResponse) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *TransferResponse) GetSettingsId() uint64 {
	if m != nil {
		return m.SettingsId
	}
	return 0
}

// Request for last transaction Hash for the Account
type GetPrevHashRequest struct {
	Account uint64 `protobuf:"varint,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (m *GetPrevHashRequest) Reset()                    { *m = GetPrevHashRequest{} }
func (m *GetPrevHashRequest) String() string            { return proto.CompactTextString(m) }
func (*GetPrevHashRequest) ProtoMessage()               {}
func (*GetPrevHashRequest) Descriptor() ([]byte, []int) { return fileDescriptorApiService, []int{4} }

func (m *GetPrevHashRequest) GetAccount() uint64 {
	if m != nil {
		return m.Account
	}
	return 0
}

// Response on GetPrevHashRequest
type GetPrevHashResponse struct {
	// Operation Status
	Status *Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	// Hash of last transaction.
	Hash string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (m *GetPrevHashResponse) Reset()                    { *m = GetPrevHashResponse{} }
func (m *GetPrevHashResponse) String() string            { return proto.CompactTextString(m) }
func (*GetPrevHashResponse) ProtoMessage()               {}
func (*GetPrevHashResponse) Descriptor() ([]byte, []int) { return fileDescriptorApiService, []int{5} }

func (m *GetPrevHashResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetPrevHashResponse) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

// Request for account balance
type GetBalanceRequest struct {
	// Account ID
	Account uint64 `protobuf:"varint,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (m *GetBalanceRequest) Reset()                    { *m = GetBalanceRequest{} }
func (m *GetBalanceRequest) String() string            { return proto.CompactTextString(m) }
func (*GetBalanceRequest) ProtoMessage()               {}
func (*GetBalanceRequest) Descriptor() ([]byte, []int) { return fileDescriptorApiService, []int{6} }

func (m *GetBalanceRequest) GetAccount() uint64 {
	if m != nil {
		return m.Account
	}
	return 0
}

// Response on GetBalanceRequest
type GetBalanceResponse struct {
	// Operation Status
	Status *Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	// Account balance
	Balance int64 `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (m *GetBalanceResponse) Reset()                    { *m = GetBalanceResponse{} }
func (m *GetBalanceResponse) String() string            { return proto.CompactTextString(m) }
func (*GetBalanceResponse) ProtoMessage()               {}
func (*GetBalanceResponse) Descriptor() ([]byte, []int) { return fileDescriptorApiService, []int{7} }

func (m *GetBalanceResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetBalanceResponse) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

// Request to change account settings
type SettingsRequest struct {
	// Account ID
	Account uint64 `protobuf:"varint,1,opt,name=account,proto3" json:"account,omitempty"`
	// New Public Key
	PublicKey string `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// Hash of last Account Settings, omit or empty if first
	PrevHash string `protobuf:"bytes,3,opt,name=prev_hash,json=prevHash,proto3" json:"prev_hash,omitempty"`
	// User defined Data Hash
	DataHash string `protobuf:"bytes,4,opt,name=data_hash,json=dataHash,proto3" json:"data_hash,omitempty"`
	// Transaction Sign
	Sign string `protobuf:"bytes,5,opt,name=sign,proto3" json:"sign,omitempty"`
	// Enables sign checking for following requests
	VerifyTransferSign bool `protobuf:"varint,6,opt,name=verify_transfer_sign,json=verifyTransferSign,proto3" json:"verify_transfer_sign,omitempty"`
}

func (m *SettingsRequest) Reset()                    { *m = SettingsRequest{} }
func (m *SettingsRequest) String() string            { return proto.CompactTextString(m) }
func (*SettingsRequest) ProtoMessage()               {}
func (*SettingsRequest) Descriptor() ([]byte, []int) { return fileDescriptorApiService, []int{8} }

func (m *SettingsRequest) GetAccount() uint64 {
	if m != nil {
		return m.Account
	}
	return 0
}

func (m *SettingsRequest) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *SettingsRequest) GetPrevHash() string {
	if m != nil {
		return m.PrevHash
	}
	return ""
}

func (m *SettingsRequest) GetDataHash() string {
	if m != nil {
		return m.DataHash
	}
	return ""
}

func (m *SettingsRequest) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

func (m *SettingsRequest) GetVerifyTransferSign() bool {
	if m != nil {
		return m.VerifyTransferSign
	}
	return false
}

// Response on SettingsRequest
type SettingsResponse struct {
	// Operation Status
	Status *Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	// Last account Settings ID
	SettingsId string `protobuf:"bytes,2,opt,name=settings_id,json=settingsId,proto3" json:"settings_id,omitempty"`
	// Last account Settings Hash
	Hash string `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (m *SettingsResponse) Reset()                    { *m = SettingsResponse{} }
func (m *SettingsResponse) String() string            { return proto.CompactTextString(m) }
func (*SettingsResponse) ProtoMessage()               {}
func (*SettingsResponse) Descriptor() ([]byte, []int) { return fileDescriptorApiService, []int{9} }

func (m *SettingsResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *SettingsResponse) GetSettingsId() string {
	if m != nil {
		return m.SettingsId
	}
	return ""
}

func (m *SettingsResponse) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

// Request for last account Settings
type GetLastSettingsRequest struct {
	// Account ID
	Account uint64 `protobuf:"varint,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (m *GetLastSettingsRequest) Reset()         { *m = GetLastSettingsRequest{} }
func (m *GetLastSettingsRequest) String() string { return proto.CompactTextString(m) }
func (*GetLastSettingsRequest) ProtoMessage()    {}
func (*GetLastSettingsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorApiService, []int{10}
}

func (m *GetLastSettingsRequest) GetAccount() uint64 {
	if m != nil {
		return m.Account
	}
	return 0
}

// Response on GetLastSettingsRequest
type GetLastSettingsResponse struct {
	// Operation Status
	Status *Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	// Last Settings ID
	Id uint64 `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	// Last Settings Hash
	Hash string `protobuf:"bytes,5,opt,name=hash,proto3" json:"hash,omitempty"`
	// Acccount ID
	Account uint64 `protobuf:"varint,6,opt,name=account,proto3" json:"account,omitempty"`
	// User Public Key
	PublicKey string `protobuf:"bytes,7,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// Hash of Previous settings
	// None of empty if first
	PrevHash string `protobuf:"bytes,8,opt,name=prev_hash,json=prevHash,proto3" json:"prev_hash,omitempty"`
	// User defined Data Hash
	DataHash string `protobuf:"bytes,9,opt,name=data_hash,json=dataHash,proto3" json:"data_hash,omitempty"`
	// Request Sign
	Sign string `protobuf:"bytes,10,opt,name=sign,proto3" json:"sign,omitempty"`
	// True if sign checking for requests is enabled
	VerifyTransferSign bool `protobuf:"varint,11,opt,name=verify_transfer_sign,json=verifyTransferSign,proto3" json:"verify_transfer_sign,omitempty"`
}

func (m *GetLastSettingsResponse) Reset()         { *m = GetLastSettingsResponse{} }
func (m *GetLastSettingsResponse) String() string { return proto.CompactTextString(m) }
func (*GetLastSettingsResponse) ProtoMessage()    {}
func (*GetLastSettingsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptorApiService, []int{11}
}

func (m *GetLastSettingsResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetLastSettingsResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetLastSettingsResponse) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *GetLastSettingsResponse) GetAccount() uint64 {
	if m != nil {
		return m.Account
	}
	return 0
}

func (m *GetLastSettingsResponse) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *GetLastSettingsResponse) GetPrevHash() string {
	if m != nil {
		return m.PrevHash
	}
	return ""
}

func (m *GetLastSettingsResponse) GetDataHash() string {
	if m != nil {
		return m.DataHash
	}
	return ""
}

func (m *GetLastSettingsResponse) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

func (m *GetLastSettingsResponse) GetVerifyTransferSign() bool {
	if m != nil {
		return m.VerifyTransferSign
	}
	return false
}

// Request for account transactions History
type GetHistoryRequest struct {
	// Account ID
	Account uint64 `protobuf:"varint,1,opt,name=account,proto3" json:"account,omitempty"`
	// Max number of transactions to return at page
	Limit uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// Next page token
	Token string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (m *GetHistoryRequest) Reset()                    { *m = GetHistoryRequest{} }
func (m *GetHistoryRequest) String() string            { return proto.CompactTextString(m) }
func (*GetHistoryRequest) ProtoMessage()               {}
func (*GetHistoryRequest) Descriptor() ([]byte, []int) { return fileDescriptorApiService, []int{12} }

func (m *GetHistoryRequest) GetAccount() uint64 {
	if m != nil {
		return m.Account
	}
	return 0
}

func (m *GetHistoryRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetHistoryRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// Response of GetHistoryRequest
type GetHistoryResponse struct {
	// Operation Status
	Status *Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	// Transactions list
	Txns []*Txn `protobuf:"bytes,2,rep,name=txns" json:"txns,omitempty"`
	// Next page token
	Token string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (m *GetHistoryResponse) Reset()                    { *m = GetHistoryResponse{} }
func (m *GetHistoryResponse) String() string            { return proto.CompactTextString(m) }
func (*GetHistoryResponse) ProtoMessage()               {}
func (*GetHistoryResponse) Descriptor() ([]byte, []int) { return fileDescriptorApiService, []int{13} }

func (m *GetHistoryResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetHistoryResponse) GetTxns() []*Txn {
	if m != nil {
		return m.Txns
	}
	return nil
}

func (m *GetHistoryResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// Human-friendly representation of Txn
type Txn struct {
	// Transaction ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Sender
	Sender string `protobuf:"bytes,4,opt,name=sender,proto3" json:"sender,omitempty"`
	// Receiver
	Receiver string `protobuf:"bytes,5,opt,name=receiver,proto3" json:"receiver,omitempty"`
	// Amount
	Amount string `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount,omitempty"`
	// Sender balance just after that transaction processed
	Balance string `protobuf:"bytes,7,opt,name=balance,proto3" json:"balance,omitempty"`
	// Receiver transaction ID which is taken into accout value of current
	// transaction
	SpentBy string `protobuf:"bytes,9,opt,name=spent_by,json=spentBy,proto3" json:"spent_by,omitempty"`
	// Hash of previous transaction
	PrevHash string `protobuf:"bytes,10,opt,name=prev_hash,json=prevHash,proto3" json:"prev_hash,omitempty"`
	// Actual settings ID at moment of transaction processing
	SettingsId string `protobuf:"bytes,12,opt,name=settings_id,json=settingsId,proto3" json:"settings_id,omitempty"`
	// Request Sign
	Sign string `protobuf:"bytes,13,opt,name=sign,proto3" json:"sign,omitempty"`
	// Request Hash
	Hash string `protobuf:"bytes,21,opt,name=hash,proto3" json:"hash,omitempty"`
	// Metadata attached
	Meta *Meta `protobuf:"bytes,14,opt,name=meta" json:"meta,omitempty"`
}

func (m *Txn) Reset()                    { *m = Txn{} }
func (m *Txn) String() string            { return proto.CompactTextString(m) }
func (*Txn) ProtoMessage()               {}
func (*Txn) Descriptor() ([]byte, []int) { return fileDescriptorApiService, []int{14} }

func (m *Txn) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Txn) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *Txn) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

func (m *Txn) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *Txn) GetBalance() string {
	if m != nil {
		return m.Balance
	}
	return ""
}

func (m *Txn) GetSpentBy() string {
	if m != nil {
		return m.SpentBy
	}
	return ""
}

func (m *Txn) GetPrevHash() string {
	if m != nil {
		return m.PrevHash
	}
	return ""
}

func (m *Txn) GetSettingsId() string {
	if m != nil {
		return m.SettingsId
	}
	return ""
}

func (m *Txn) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

func (m *Txn) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Txn) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

// Metadata that could be attached to transactions
type Meta struct {
	// Unique key
	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Fields and values to use for indexation
	Index map[string][]byte `protobuf:"bytes,2,rep,name=index" json:"index,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Other fields and values
	Data map[string][]byte `protobuf:"bytes,3,rep,name=data" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (m *Meta) Reset()                    { *m = Meta{} }
func (m *Meta) String() string            { return proto.CompactTextString(m) }
func (*Meta) ProtoMessage()               {}
func (*Meta) Descriptor() ([]byte, []int) { return fileDescriptorApiService, []int{15} }

func (m *Meta) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Meta) GetIndex() map[string][]byte {
	if m != nil {
		return m.Index
	}
	return nil
}

func (m *Meta) GetData() map[string][]byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// Request transactions by metadata keys
type GetByMetaKeyRequest struct {
	// Metadata keys
	Keys [][]byte `protobuf:"bytes,1,rep,name=keys" json:"keys,omitempty"`
}

func (m *GetByMetaKeyRequest) Reset()                    { *m = GetByMetaKeyRequest{} }
func (m *GetByMetaKeyRequest) String() string            { return proto.CompactTextString(m) }
func (*GetByMetaKeyRequest) ProtoMessage()               {}
func (*GetByMetaKeyRequest) Descriptor() ([]byte, []int) { return fileDescriptorApiService, []int{16} }

func (m *GetByMetaKeyRequest) GetKeys() [][]byte {
	if m != nil {
		return m.Keys
	}
	return nil
}

// Response on GetByMetaKeyRequest
type GetByMetaKeyResponse struct {
	// Operation Status
	Status *Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	// List of matching transactions
	Txns []*Txn `protobuf:"bytes,2,rep,name=txns" json:"txns,omitempty"`
}

func (m *GetByMetaKeyResponse) Reset()                    { *m = GetByMetaKeyResponse{} }
func (m *GetByMetaKeyResponse) String() string            { return proto.CompactTextString(m) }
func (*GetByMetaKeyResponse) ProtoMessage()               {}
func (*GetByMetaKeyResponse) Descriptor() ([]byte, []int) { return fileDescriptorApiService, []int{17} }

func (m *GetByMetaKeyResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetByMetaKeyResponse) GetTxns() []*Txn {
	if m != nil {
		return m.Txns
	}
	return nil
}

// Request for metadata by query
type SearchMetaRequest struct {
	// Fields and values to match
	// Only indexed fields are matched
	Index map[string][]byte `protobuf:"bytes,2,rep,name=index" json:"index,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Next page token
	Token []byte `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	// Max number of items to return at page
	Limit int32 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (m *SearchMetaRequest) Reset()                    { *m = SearchMetaRequest{} }
func (m *SearchMetaRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchMetaRequest) ProtoMessage()               {}
func (*SearchMetaRequest) Descriptor() ([]byte, []int) { return fileDescriptorApiService, []int{18} }

func (m *SearchMetaRequest) GetIndex() map[string][]byte {
	if m != nil {
		return m.Index
	}
	return nil
}

func (m *SearchMetaRequest) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *SearchMetaRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// Response on SearchMetaRequest
type SearchMetaResponse struct {
	// Operation Status
	Status *Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	// Metadata item
	Items []*Meta `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	// Next page token
	NextToken []byte `protobuf:"bytes,3,opt,name=next_token,json=nextToken,proto3" json:"next_token,omitempty"`
}

func (m *SearchMetaResponse) Reset()                    { *m = SearchMetaResponse{} }
func (m *SearchMetaResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchMetaResponse) ProtoMessage()               {}
func (*SearchMetaResponse) Descriptor() ([]byte, []int) { return fileDescriptorApiService, []int{19} }

func (m *SearchMetaResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *SearchMetaResponse) GetItems() []*Meta {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *SearchMetaResponse) GetNextToken() []byte {
	if m != nil {
		return m.NextToken
	}
	return nil
}

// Request to write new metadata (or rewrite)
type PutMetaRequest struct {
	// Metadata to write
	Meta *Meta `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
}

func (m *PutMetaRequest) Reset()                    { *m = PutMetaRequest{} }
func (m *PutMetaRequest) String() string            { return proto.CompactTextString(m) }
func (*PutMetaRequest) ProtoMessage()               {}
func (*PutMetaRequest) Descriptor() ([]byte, []int) { return fileDescriptorApiService, []int{20} }

func (m *PutMetaRequest) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

// Response on PutMetaRequest
type PutMetaResponse struct {
	// Operation Status
	Status *Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *PutMetaResponse) Reset()                    { *m = PutMetaResponse{} }
func (m *PutMetaResponse) String() string            { return proto.CompactTextString(m) }
func (*PutMetaResponse) ProtoMessage()               {}
func (*PutMetaResponse) Descriptor() ([]byte, []int) { return fileDescriptorApiService, []int{21} }

func (m *PutMetaResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterType((*Status)(nil), "api.Status")
	proto.RegisterType((*TransferItem)(nil), "api.TransferItem")
	proto.RegisterType((*TransferRequest)(nil), "api.TransferRequest")
	proto.RegisterType((*TransferResponse)(nil), "api.TransferResponse")
	proto.RegisterType((*GetPrevHashRequest)(nil), "api.GetPrevHashRequest")
	proto.RegisterType((*GetPrevHashResponse)(nil), "api.GetPrevHashResponse")
	proto.RegisterType((*GetBalanceRequest)(nil), "api.GetBalanceRequest")
	proto.RegisterType((*GetBalanceResponse)(nil), "api.GetBalanceResponse")
	proto.RegisterType((*SettingsRequest)(nil), "api.SettingsRequest")
	proto.RegisterType((*SettingsResponse)(nil), "api.SettingsResponse")
	proto.RegisterType((*GetLastSettingsRequest)(nil), "api.GetLastSettingsRequest")
	proto.RegisterType((*GetLastSettingsResponse)(nil), "api.GetLastSettingsResponse")
	proto.RegisterType((*GetHistoryRequest)(nil), "api.GetHistoryRequest")
	proto.RegisterType((*GetHistoryResponse)(nil), "api.GetHistoryResponse")
	proto.RegisterType((*Txn)(nil), "api.Txn")
	proto.RegisterType((*Meta)(nil), "api.Meta")
	proto.RegisterType((*GetByMetaKeyRequest)(nil), "api.GetByMetaKeyRequest")
	proto.RegisterType((*GetByMetaKeyResponse)(nil), "api.GetByMetaKeyResponse")
	proto.RegisterType((*SearchMetaRequest)(nil), "api.SearchMetaRequest")
	proto.RegisterType((*SearchMetaResponse)(nil), "api.SearchMetaResponse")
	proto.RegisterType((*PutMetaRequest)(nil), "api.PutMetaRequest")
	proto.RegisterType((*PutMetaResponse)(nil), "api.PutMetaResponse")
	proto.RegisterEnum("api.TransferCode", TransferCode_name, TransferCode_value)
}

func init() { proto.RegisterFile("api_service.proto", fileDescriptorApiService) }

var fileDescriptorApiService = []byte{
	// 1394 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0xdb, 0x72, 0x1a, 0x47,
	0x13, 0xfe, 0x97, 0x33, 0x0d, 0x06, 0x34, 0x46, 0x12, 0x5e, 0xd9, 0xf5, 0x2b, 0x9b, 0x72, 0x59,
	0x51, 0xc5, 0xe0, 0x90, 0x54, 0xec, 0x72, 0x25, 0x55, 0x01, 0x8b, 0x48, 0x94, 0x65, 0xac, 0x2c,
	0xd8, 0x55, 0x4a, 0x2e, 0xa8, 0x01, 0xc6, 0x68, 0xcb, 0xb0, 0xbb, 0xd9, 0x1d, 0x64, 0xb8, 0x4d,
	0xde, 0x20, 0xbe, 0xf4, 0x5b, 0xe4, 0x31, 0x92, 0xcb, 0xbc, 0x40, 0x2e, 0xf2, 0x04, 0x79, 0x82,
	0xd4, 0x1c, 0x96, 0x3d, 0x80, 0x2c, 0x93, 0xca, 0x15, 0xdb, 0xdd, 0x33, 0x3d, 0x3d, 0x5f, 0x7f,
	0xdd, 0x3d, 0xc0, 0x16, 0xb6, 0x8d, 0xbe, 0x4b, 0x9c, 0x4b, 0x63, 0x48, 0xaa, 0xb6, 0x63, 0x51,
	0x0b, 0xc5, 0xb1, 0x6d, 0xa8, 0xb7, 0xc6, 0x96, 0x35, 0x9e, 0x90, 0x1a, 0x57, 0x0d, 0x66, 0xaf,
	0x6a, 0xd8, 0x5c, 0x08, 0xbb, 0xfa, 0x29, 0xff, 0x19, 0xde, 0x1f, 0x13, 0xf3, 0xbe, 0xfb, 0x06,
	0x8f, 0xc7, 0xc4, 0xa9, 0x59, 0x36, 0x35, 0x2c, 0xd3, 0xad, 0x61, 0xd3, 0xb4, 0x28, 0xe6, 0xdf,
	0x72, 0xf5, 0x6d, 0xe9, 0x08, 0xdb, 0xc6, 0xaa, 0x55, 0x5b, 0x40, 0xaa, 0x4b, 0x31, 0x9d, 0xb9,
	0xe8, 0x2e, 0x24, 0x86, 0xd6, 0x88, 0x54, 0x94, 0x7d, 0xe5, 0xa0, 0x50, 0xdf, 0xaa, 0x62, 0xdb,
	0xa8, 0xf6, 0x1c, 0x6c, 0xba, 0xaf, 0x88, 0xf3, 0xc4, 0x1a, 0x11, 0x9d, 0x9b, 0x51, 0x05, 0xd2,
	0x53, 0xe2, 0xba, 0x78, 0x4c, 0x2a, 0xb1, 0x7d, 0xe5, 0x20, 0xab, 0x7b, 0x22, 0xaa, 0x42, 0x7a,
	0x44, 0x28, 0x36, 0x26, 0x6e, 0x25, 0xbe, 0x1f, 0x3f, 0xc8, 0xd5, 0xcb, 0x55, 0x71, 0x74, 0xd5,
	0xbb, 0x43, 0xb5, 0x61, 0x2e, 0x74, 0x6f, 0x91, 0xd6, 0x84, 0xbc, 0xe7, 0xbf, 0x4d, 0xc9, 0x14,
	0xa9, 0x90, 0x71, 0xc8, 0x90, 0x18, 0x97, 0xc4, 0xe1, 0x41, 0x24, 0xf4, 0xa5, 0x8c, 0x76, 0x20,
	0x85, 0xa7, 0xd6, 0xcc, 0xa4, 0xfc, 0xd0, 0xb8, 0x2e, 0x25, 0xed, 0x77, 0x05, 0x8a, 0x9e, 0x13,
	0x9d, 0xfc, 0x38, 0x23, 0x2e, 0x65, 0x6b, 0x5d, 0x62, 0x8e, 0x96, 0x5e, 0xa4, 0x84, 0xee, 0x41,
	0x72, 0x80, 0xe9, 0xf0, 0xa2, 0x12, 0xe3, 0xd1, 0x85, 0x6f, 0xc8, 0x22, 0xd0, 0x85, 0x1d, 0xfd,
	0x1f, 0x72, 0x2e, 0xa1, 0xd4, 0x30, 0xc7, 0x6e, 0xdf, 0x18, 0x55, 0xe2, 0xdc, 0x0b, 0x78, 0xaa,
	0xf6, 0x08, 0xed, 0x41, 0xd6, 0x76, 0xc8, 0x65, 0xff, 0x02, 0xbb, 0x17, 0x95, 0x04, 0x47, 0x21,
	0xc3, 0x14, 0x27, 0xd8, 0xbd, 0x40, 0x08, 0x12, 0xae, 0x31, 0x36, 0x2b, 0x49, 0xae, 0xe7, 0xdf,
	0xe8, 0x2e, 0x64, 0xa6, 0x84, 0xe2, 0x11, 0xa6, 0xb8, 0x92, 0xda, 0x57, 0x0e, 0x72, 0xf5, 0x2c,
	0x3f, 0xfd, 0x19, 0xa1, 0x58, 0x5f, 0x9a, 0xb4, 0x9f, 0x15, 0x28, 0xf9, 0xb7, 0x71, 0x6d, 0xcb,
	0x74, 0x09, 0xfa, 0x18, 0x52, 0x2e, 0xcf, 0x10, 0xbf, 0x4e, 0xae, 0x9e, 0xe3, 0x3b, 0x45, 0xd2,
	0x74, 0x69, 0x42, 0xdb, 0x90, 0xa2, 0x73, 0x93, 0x45, 0x2b, 0x92, 0x92, 0xa4, 0x73, 0xb3, 0x3d,
	0x62, 0xb1, 0xf0, 0x18, 0xe3, 0x22, 0x16, 0xf6, 0x1d, 0xbd, 0x5d, 0x22, 0x7a, 0x3b, 0xad, 0x0a,
	0xe8, 0x98, 0xd0, 0x33, 0x79, 0x1f, 0x0f, 0xd5, 0x0a, 0xa4, 0xf1, 0x70, 0xc8, 0x53, 0x20, 0x60,
	0xf5, 0x44, 0xad, 0x03, 0x37, 0x43, 0xeb, 0x37, 0x89, 0xdb, 0x0b, 0x30, 0xe6, 0x07, 0xa8, 0xdd,
	0x87, 0xad, 0x63, 0x42, 0x9b, 0x78, 0x82, 0xcd, 0x21, 0xb9, 0xfe, 0xf8, 0x2e, 0x0f, 0x77, 0xb9,
	0x7c, 0x93, 0xd3, 0x2b, 0x90, 0x1e, 0x88, 0x7d, 0x92, 0x56, 0x9e, 0xa8, 0xfd, 0xa6, 0x40, 0xb1,
	0x2b, 0x21, 0xb9, 0x36, 0x04, 0x74, 0x07, 0xc0, 0x9e, 0x0d, 0x26, 0xc6, 0xb0, 0xff, 0x9a, 0x2c,
	0xe4, 0x5d, 0xb2, 0x42, 0xf3, 0x94, 0x2c, 0xc2, 0x74, 0x89, 0x47, 0xe8, 0xb2, 0x07, 0x59, 0x96,
	0xfb, 0x10, 0x97, 0x98, 0xe2, 0x4a, 0x2e, 0x3d, 0x80, 0xf2, 0x25, 0x71, 0x8c, 0x57, 0x8b, 0x3e,
	0x95, 0x54, 0xe9, 0xf3, 0x35, 0x8c, 0x57, 0x19, 0x1d, 0x09, 0x9b, 0xc7, 0xa2, 0xae, 0x31, 0x36,
	0xb5, 0x09, 0x94, 0xfc, 0xbb, 0x6c, 0x82, 0x4f, 0x84, 0x2a, 0xe2, 0x62, 0xc1, 0x42, 0x58, 0xc3,
	0x2f, 0xad, 0x0e, 0x3b, 0xc7, 0x84, 0x9e, 0x62, 0x97, 0x7e, 0x30, 0x80, 0xda, 0xbb, 0x18, 0xec,
	0xae, 0x6c, 0xda, 0x24, 0xd2, 0x02, 0xc4, 0x96, 0x5c, 0x8e, 0x19, 0x7e, 0x60, 0xc9, 0x00, 0xf1,
	0x03, 0xc7, 0xa7, 0xde, 0x97, 0xbf, 0xf4, 0x7b, 0xf3, 0x97, 0x79, 0x5f, 0xfe, 0xb2, 0x57, 0xe4,
	0x0f, 0x3e, 0x20, 0x7f, 0xb9, 0x2b, 0xf3, 0x77, 0xce, 0x0b, 0xe2, 0xc4, 0x70, 0xa9, 0xe5, 0x2c,
	0xae, 0x67, 0x63, 0x19, 0x92, 0x13, 0x63, 0x6a, 0x88, 0x56, 0x79, 0x43, 0x17, 0x02, 0xd3, 0x52,
	0xeb, 0x35, 0x31, 0x65, 0xae, 0x84, 0xa0, 0x4d, 0x79, 0xf1, 0x2c, 0x5d, 0x6f, 0x02, 0xf9, 0x6d,
	0x48, 0xd0, 0xb9, 0xe9, 0xca, 0x6e, 0x9a, 0x11, 0xdd, 0x74, 0x6e, 0xea, 0x5c, 0x7b, 0xc5, 0x71,
	0xef, 0x62, 0x10, 0xef, 0xcd, 0x4d, 0x99, 0x2e, 0x85, 0x9b, 0x58, 0xba, 0xfc, 0x96, 0x2d, 0x2a,
	0xc0, 0x6b, 0xd9, 0xc1, 0x91, 0x20, 0x52, 0xb9, 0x6e, 0x24, 0xa4, 0xc4, 0x1e, 0x21, 0x05, 0x8b,
	0x5a, 0x64, 0xd2, 0x13, 0xd1, 0x2d, 0xc8, 0xb8, 0x36, 0x31, 0x69, 0x7f, 0xb0, 0x90, 0x99, 0x4a,
	0x73, 0xb9, 0x19, 0x49, 0x31, 0x44, 0x52, 0x1c, 0x29, 0x83, 0xfc, 0xba, 0x32, 0xe0, 0x29, 0xbc,
	0x11, 0x48, 0xb3, 0xc7, 0xc0, 0xed, 0x00, 0x03, 0xef, 0x40, 0x82, 0xf5, 0xfa, 0x4a, 0x21, 0x3a,
	0x02, 0xb8, 0x5a, 0xfb, 0x53, 0x81, 0x04, 0x13, 0x51, 0x09, 0xe2, 0x8c, 0x88, 0x0c, 0x9f, 0xbc,
	0xce, 0x3e, 0xd1, 0x21, 0x24, 0x0d, 0x73, 0x44, 0xe6, 0x12, 0xed, 0xf2, 0x72, 0x6b, 0xb5, 0xcd,
	0xd4, 0x2d, 0x93, 0x3a, 0x0b, 0x5d, 0x2c, 0x41, 0xf7, 0x20, 0xc1, 0x07, 0x8d, 0x18, 0xc2, 0x37,
	0xfd, 0xa5, 0x47, 0x98, 0x62, 0xb1, 0x92, 0x2f, 0x50, 0x1f, 0x01, 0xf8, 0xbb, 0x83, 0x87, 0x66,
	0xc5, 0xa1, 0x65, 0x48, 0x5e, 0xe2, 0xc9, 0x4c, 0x34, 0xc7, 0xbc, 0x2e, 0x84, 0xc7, 0xb1, 0x47,
	0x8a, 0xfa, 0x10, 0xb2, 0x4b, 0x67, 0x9b, 0x6c, 0xd4, 0x3e, 0xe1, 0xb3, 0xa2, 0xb9, 0x60, 0xf1,
	0x3c, 0x25, 0x4b, 0x32, 0x23, 0x48, 0xbc, 0x26, 0x0b, 0x46, 0xb7, 0xf8, 0x41, 0x5e, 0xe7, 0xdf,
	0xda, 0x39, 0x94, 0xc3, 0x4b, 0xff, 0x33, 0x72, 0x6a, 0xbf, 0x2a, 0xb0, 0xd5, 0x25, 0xd8, 0x19,
	0x5e, 0x70, 0xf4, 0x65, 0x10, 0x0f, 0xc3, 0x18, 0x7f, 0x24, 0xfc, 0x46, 0x97, 0xad, 0x01, 0x3c,
	0xc4, 0xf5, 0xbc, 0xe4, 0xba, 0x5f, 0x86, 0x8c, 0xd2, 0x49, 0x59, 0x86, 0xff, 0x1e, 0x73, 0x6d,
	0x01, 0x28, 0x18, 0xcc, 0x66, 0x7d, 0x3c, 0x69, 0x50, 0x32, 0xf5, 0xe0, 0x08, 0x10, 0x4f, 0xe8,
	0x59, 0x03, 0x34, 0xc9, 0x9c, 0xf6, 0x83, 0xd7, 0xc8, 0x32, 0x4d, 0x8f, 0x97, 0x6d, 0x0d, 0x0a,
	0x67, 0x33, 0x1a, 0xc4, 0xca, 0x63, 0xb2, 0xb2, 0x9e, 0xc9, 0x5f, 0x42, 0x71, 0xb9, 0x61, 0x83,
	0x40, 0x0f, 0xdf, 0x2a, 0xfe, 0x9b, 0x90, 0xbd, 0x39, 0x51, 0x0a, 0x62, 0xcf, 0x9f, 0x96, 0xfe,
	0x87, 0xb6, 0x61, 0xab, 0xdd, 0x79, 0xd9, 0x38, 0x6d, 0x1f, 0xf5, 0xcf, 0xf4, 0xd6, 0xcb, 0xfe,
	0x49, 0xa3, 0x7b, 0x52, 0x52, 0x50, 0x09, 0xf2, 0x9e, 0xba, 0xdb, 0x3e, 0xee, 0x94, 0x62, 0xa8,
	0x08, 0xb9, 0x66, 0xe3, 0xa8, 0xaf, 0xb7, 0xbe, 0x7b, 0xd1, 0xea, 0xf6, 0x4a, 0x71, 0x54, 0x00,
	0xe8, 0x3c, 0xef, 0x37, 0x1b, 0xa7, 0x8d, 0xce, 0x93, 0x56, 0x29, 0x81, 0x10, 0x14, 0xda, 0x9d,
	0x5e, 0x4b, 0xef, 0x34, 0x4e, 0xfb, 0x2d, 0x5d, 0x7f, 0xae, 0x97, 0x92, 0x28, 0x0b, 0x49, 0xbd,
	0xd5, 0xd3, 0xcf, 0x4b, 0x69, 0x66, 0x7e, 0xd6, 0xea, 0x35, 0x8e, 0x1a, 0xbd, 0x86, 0x34, 0x67,
	0xea, 0x7f, 0x27, 0x01, 0x1a, 0x67, 0xed, 0xae, 0x78, 0xa4, 0xa3, 0x1f, 0xa0, 0x78, 0xe6, 0x58,
	0x43, 0xe2, 0xba, 0x5e, 0xa8, 0xa8, 0x1c, 0x7a, 0x4b, 0x4a, 0x90, 0xd4, 0xed, 0x88, 0x56, 0x20,
	0xa1, 0xed, 0xfd, 0xf4, 0xc7, 0x5f, 0x6f, 0x63, 0xdb, 0x5a, 0x89, 0xbd, 0xed, 0x83, 0x6e, 0x1e,
	0x2b, 0x87, 0xe8, 0x1c, 0x72, 0x81, 0xc7, 0x14, 0xda, 0xe5, 0x2e, 0x56, 0x9f, 0x63, 0x6a, 0x65,
	0xd5, 0x20, 0xdd, 0xef, 0x72, 0xf7, 0x5b, 0x5a, 0xbe, 0x36, 0xf6, 0xad, 0xcc, 0xf5, 0x0b, 0x00,
	0xff, 0xa1, 0x84, 0x76, 0x3c, 0x07, 0xe1, 0x87, 0x96, 0xba, 0xbb, 0xa2, 0x97, 0x7e, 0x77, 0xb8,
	0xdf, 0x92, 0x96, 0x63, 0x7e, 0xa5, 0x51, 0x44, 0x5c, 0x78, 0x61, 0x8f, 0x30, 0x25, 0xde, 0xe4,
	0x96, 0x68, 0x44, 0xa6, 0xbf, 0x44, 0x23, 0x3a, 0xde, 0x35, 0x95, 0xbb, 0x2d, 0x6b, 0xc5, 0xda,
	0x2c, 0xe4, 0x85, 0xb9, 0x36, 0xa0, 0x18, 0x79, 0x15, 0xa0, 0x3d, 0x2f, 0xbc, 0x35, 0x0f, 0x0c,
	0xf5, 0xf6, 0x7a, 0xe3, 0x0a, 0xee, 0xe3, 0xf0, 0x0a, 0x1f, 0x1c, 0x39, 0x08, 0x7d, 0x70, 0xc2,
	0x43, 0xd7, 0x07, 0x27, 0x32, 0x31, 0xc3, 0xe0, 0x48, 0x23, 0x73, 0xfb, 0x04, 0xf2, 0xc1, 0x26,
	0x86, 0x96, 0x69, 0x8b, 0xb6, 0x40, 0xf5, 0xd6, 0x1a, 0x8b, 0x2c, 0x9d, 0xaf, 0x01, 0xfc, 0xca,
	0x97, 0xb1, 0xad, 0xf4, 0x25, 0x19, 0xdb, 0x9a, 0x16, 0xf1, 0x05, 0xa4, 0x65, 0x31, 0x22, 0x31,
	0x0c, 0xc2, 0xb5, 0xac, 0x96, 0xc3, 0x4a, 0xb1, 0xab, 0xf9, 0xed, 0x2f, 0x8d, 0xaf, 0xd0, 0x43,
	0x4d, 0x05, 0x70, 0xcc, 0x51, 0x75, 0x48, 0x4c, 0x4a, 0x1c, 0x35, 0x8f, 0xbf, 0xf1, 0xa5, 0xc3,
	0x32, 0xa0, 0x37, 0xe4, 0xde, 0x64, 0xb2, 0x3f, 0xbc, 0xb0, 0x2c, 0x97, 0xec, 0x4f, 0x30, 0x25,
	0x4e, 0x3d, 0xfe, 0x59, 0xf5, 0xc1, 0xa1, 0xa2, 0x7c, 0x9f, 0xc4, 0xb6, 0x61, 0x0f, 0x06, 0x29,
	0xfe, 0xe7, 0xef, 0xf3, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x41, 0x3c, 0xbf, 0xaf, 0xe8, 0x0e,
	0x00, 0x00,
}
