// Code generated by protoc-gen-gogo.
// source: db_service.proto
// DO NOT EDIT!

/*
Package metadbpb is a generated protocol buffer package.

It is generated from these files:
	db_service.proto

It has these top-level messages:
	Status
	Pair
	Data
	PutRequest
	PutResponse
	GetRequest
	GetResponse
	GetMultiRequest
	GetMultiResponse
	DeleteRequest
	DeleteResponse
	SearchRequest
	SearchResponse
*/
package metadbpb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type DBStatusCode int32

const (
	DBStatusCode_OK          DBStatusCode = 0
	DBStatusCode_OTHER_ERROR DBStatusCode = 1
)

var DBStatusCode_name = map[int32]string{
	0: "OK",
	1: "OTHER_ERROR",
}
var DBStatusCode_value = map[string]int32{
	"OK":          0,
	"OTHER_ERROR": 1,
}

func (x DBStatusCode) String() string {
	return proto.EnumName(DBStatusCode_name, int32(x))
}
func (DBStatusCode) EnumDescriptor() ([]byte, []int) { return fileDescriptorDbService, []int{0} }

type Status struct {
	// A simple error code that can be easily handled by the client.
	Code DBStatusCode `protobuf:"varint,1,opt,name=code,proto3,enum=metadbpb.DBStatusCode" json:"code,omitempty"`
	// A developer-facing human-readable error message in English. It should
	// both explain the error and offer an actionable resolution to it.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Additional error information that the client code can use to handle
	// the error, such as retry delay or a help link.
	Details []*google_protobuf.Any `protobuf:"bytes,3,rep,name=details" json:"details,omitempty"`
}

func (m *Status) Reset()                    { *m = Status{} }
func (m *Status) String() string            { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()               {}
func (*Status) Descriptor() ([]byte, []int) { return fileDescriptorDbService, []int{0} }

func (m *Status) GetCode() DBStatusCode {
	if m != nil {
		return m.Code
	}
	return DBStatusCode_OK
}

func (m *Status) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Status) GetDetails() []*google_protobuf.Any {
	if m != nil {
		return m.Details
	}
	return nil
}

type Pair struct {
	Key   []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *Pair) Reset()                    { *m = Pair{} }
func (m *Pair) String() string            { return proto.CompactTextString(m) }
func (*Pair) ProtoMessage()               {}
func (*Pair) Descriptor() ([]byte, []int) { return fileDescriptorDbService, []int{1} }

func (m *Pair) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Pair) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type Data struct {
	Key    []byte  `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Fields []*Pair `protobuf:"bytes,2,rep,name=fields" json:"fields,omitempty"`
	Index  []*Pair `protobuf:"bytes,3,rep,name=index" json:"index,omitempty"`
}

func (m *Data) Reset()                    { *m = Data{} }
func (m *Data) String() string            { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()               {}
func (*Data) Descriptor() ([]byte, []int) { return fileDescriptorDbService, []int{2} }

func (m *Data) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Data) GetFields() []*Pair {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *Data) GetIndex() []*Pair {
	if m != nil {
		return m.Index
	}
	return nil
}

type PutRequest struct {
	Prefix []byte `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Data   *Data  `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (m *PutRequest) Reset()                    { *m = PutRequest{} }
func (m *PutRequest) String() string            { return proto.CompactTextString(m) }
func (*PutRequest) ProtoMessage()               {}
func (*PutRequest) Descriptor() ([]byte, []int) { return fileDescriptorDbService, []int{3} }

func (m *PutRequest) GetPrefix() []byte {
	if m != nil {
		return m.Prefix
	}
	return nil
}

func (m *PutRequest) GetData() *Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type PutResponse struct {
	Status *Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *PutResponse) Reset()                    { *m = PutResponse{} }
func (m *PutResponse) String() string            { return proto.CompactTextString(m) }
func (*PutResponse) ProtoMessage()               {}
func (*PutResponse) Descriptor() ([]byte, []int) { return fileDescriptorDbService, []int{4} }

func (m *PutResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type GetRequest struct {
	Prefix []byte `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Key    []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptorDbService, []int{5} }

func (m *GetRequest) GetPrefix() []byte {
	if m != nil {
		return m.Prefix
	}
	return nil
}

func (m *GetRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type GetResponse struct {
	Status *Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Data   *Data   `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (m *GetResponse) Reset()                    { *m = GetResponse{} }
func (m *GetResponse) String() string            { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()               {}
func (*GetResponse) Descriptor() ([]byte, []int) { return fileDescriptorDbService, []int{6} }

func (m *GetResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetResponse) GetData() *Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetMultiRequest struct {
	Prefix []byte   `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Keys   [][]byte `protobuf:"bytes,2,rep,name=keys" json:"keys,omitempty"`
}

func (m *GetMultiRequest) Reset()                    { *m = GetMultiRequest{} }
func (m *GetMultiRequest) String() string            { return proto.CompactTextString(m) }
func (*GetMultiRequest) ProtoMessage()               {}
func (*GetMultiRequest) Descriptor() ([]byte, []int) { return fileDescriptorDbService, []int{7} }

func (m *GetMultiRequest) GetPrefix() []byte {
	if m != nil {
		return m.Prefix
	}
	return nil
}

func (m *GetMultiRequest) GetKeys() [][]byte {
	if m != nil {
		return m.Keys
	}
	return nil
}

type GetMultiResponse struct {
	Status  *Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Results []*Data `protobuf:"bytes,2,rep,name=results" json:"results,omitempty"`
}

func (m *GetMultiResponse) Reset()                    { *m = GetMultiResponse{} }
func (m *GetMultiResponse) String() string            { return proto.CompactTextString(m) }
func (*GetMultiResponse) ProtoMessage()               {}
func (*GetMultiResponse) Descriptor() ([]byte, []int) { return fileDescriptorDbService, []int{8} }

func (m *GetMultiResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetMultiResponse) GetResults() []*Data {
	if m != nil {
		return m.Results
	}
	return nil
}

type DeleteRequest struct {
	Prefix []byte `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Key    []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptorDbService, []int{9} }

func (m *DeleteRequest) GetPrefix() []byte {
	if m != nil {
		return m.Prefix
	}
	return nil
}

func (m *DeleteRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type DeleteResponse struct {
	Status *Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptorDbService, []int{10} }

func (m *DeleteResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type SearchRequest struct {
	Prefix  []byte  `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Filters []*Pair `protobuf:"bytes,2,rep,name=filters" json:"filters,omitempty"`
	Token   []byte  `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	Limit   int32   `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptorDbService, []int{11} }

func (m *SearchRequest) GetPrefix() []byte {
	if m != nil {
		return m.Prefix
	}
	return nil
}

func (m *SearchRequest) GetFilters() []*Pair {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *SearchRequest) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *SearchRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type SearchResponse struct {
	Status    *Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Items     []*Data `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	NextToken []byte  `protobuf:"bytes,3,opt,name=next_token,json=nextToken,proto3" json:"next_token,omitempty"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptorDbService, []int{12} }

func (m *SearchResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *SearchResponse) GetItems() []*Data {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *SearchResponse) GetNextToken() []byte {
	if m != nil {
		return m.NextToken
	}
	return nil
}

func init() {
	proto.RegisterType((*Status)(nil), "metadbpb.Status")
	proto.RegisterType((*Pair)(nil), "metadbpb.Pair")
	proto.RegisterType((*Data)(nil), "metadbpb.Data")
	proto.RegisterType((*PutRequest)(nil), "metadbpb.PutRequest")
	proto.RegisterType((*PutResponse)(nil), "metadbpb.PutResponse")
	proto.RegisterType((*GetRequest)(nil), "metadbpb.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "metadbpb.GetResponse")
	proto.RegisterType((*GetMultiRequest)(nil), "metadbpb.GetMultiRequest")
	proto.RegisterType((*GetMultiResponse)(nil), "metadbpb.GetMultiResponse")
	proto.RegisterType((*DeleteRequest)(nil), "metadbpb.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "metadbpb.DeleteResponse")
	proto.RegisterType((*SearchRequest)(nil), "metadbpb.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "metadbpb.SearchResponse")
	proto.RegisterEnum("metadbpb.DBStatusCode", DBStatusCode_name, DBStatusCode_value)
}

func init() { proto.RegisterFile("db_service.proto", fileDescriptorDbService) }

var fileDescriptorDbService = []byte{
	// 590 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x4d, 0x6f, 0xda, 0x40,
	0x10, 0x2d, 0xd8, 0x31, 0xc9, 0x40, 0x88, 0xb5, 0xa2, 0xa9, 0x83, 0x54, 0x09, 0x59, 0x55, 0x6b,
	0xe5, 0xe0, 0x48, 0xae, 0xd4, 0xaa, 0xad, 0x7a, 0x48, 0x4a, 0x44, 0xa4, 0x2a, 0x02, 0x2d, 0xb9,
	0xf5, 0x80, 0x16, 0x3c, 0xa6, 0x16, 0xc6, 0xa6, 0xf6, 0x3a, 0x82, 0x43, 0xdb, 0x3f, 0xd5, 0x1f,
	0x58, 0x79, 0xd7, 0x0e, 0x26, 0x25, 0xa2, 0xdc, 0x76, 0x3e, 0xde, 0xbe, 0xd9, 0x37, 0x33, 0x0b,
	0xba, 0x3b, 0x1e, 0x25, 0x18, 0xdf, 0xfb, 0x13, 0xb4, 0x17, 0x71, 0xc4, 0x23, 0x72, 0x38, 0x47,
	0xce, 0xdc, 0xf1, 0x62, 0xdc, 0x3e, 0x9b, 0x46, 0xd1, 0x34, 0xc0, 0x0b, 0xe1, 0x1f, 0xa7, 0xde,
	0x05, 0x0b, 0x57, 0x32, 0xc9, 0xfc, 0x05, 0xda, 0x90, 0x33, 0x9e, 0x26, 0xe4, 0x1c, 0xd4, 0x49,
	0xe4, 0xa2, 0x51, 0xe9, 0x54, 0xac, 0xa6, 0x73, 0x6a, 0x17, 0x68, 0xbb, 0x7b, 0x25, 0x33, 0xbe,
	0x44, 0x2e, 0x52, 0x91, 0x43, 0x0c, 0xa8, 0xcd, 0x31, 0x49, 0xd8, 0x14, 0x8d, 0x6a, 0xa7, 0x62,
	0x1d, 0xd1, 0xc2, 0x24, 0x36, 0xd4, 0x5c, 0xe4, 0xcc, 0x0f, 0x12, 0x43, 0xe9, 0x28, 0x56, 0xdd,
	0x69, 0xd9, 0x92, 0xdc, 0x2e, 0xc8, 0xed, 0xcb, 0x70, 0x45, 0x8b, 0x24, 0xd3, 0x06, 0x75, 0xc0,
	0xfc, 0x98, 0xe8, 0xa0, 0xcc, 0x70, 0x25, 0xc8, 0x1b, 0x34, 0x3b, 0x92, 0x16, 0x1c, 0xdc, 0xb3,
	0x20, 0x95, 0x0c, 0x0d, 0x2a, 0x0d, 0xd3, 0x03, 0xb5, 0xcb, 0x38, 0xdb, 0x92, 0xff, 0x1a, 0x34,
	0xcf, 0xc7, 0xc0, 0x4d, 0x8c, 0xaa, 0x20, 0x6e, 0xae, 0x5f, 0x90, 0x31, 0xd0, 0x3c, 0x4a, 0x5e,
	0xc1, 0x81, 0x1f, 0xba, 0xb8, 0xcc, 0xeb, 0x7b, 0x9c, 0x26, 0x83, 0xe6, 0x0d, 0xc0, 0x20, 0xe5,
	0x14, 0x7f, 0xa4, 0x98, 0x70, 0x72, 0x0a, 0xda, 0x22, 0x46, 0xcf, 0x5f, 0xe6, 0x84, 0xb9, 0x45,
	0x4c, 0x50, 0x5d, 0xc6, 0x99, 0x28, 0x71, 0xe3, 0xaa, 0xac, 0x46, 0x2a, 0x62, 0xe6, 0x7b, 0xa8,
	0x8b, 0x9b, 0x92, 0x45, 0x14, 0x26, 0x48, 0x2c, 0xd0, 0x12, 0x21, 0xa7, 0xb8, 0xaa, 0xee, 0xe8,
	0x6b, 0x90, 0x94, 0x99, 0xe6, 0x71, 0xf3, 0x1d, 0x40, 0x0f, 0x77, 0x96, 0x90, 0x0b, 0x51, 0x7d,
	0x10, 0xc2, 0xfc, 0x06, 0x75, 0x81, 0xdb, 0x97, 0xf0, 0xbf, 0x5e, 0xf3, 0x19, 0x4e, 0x7a, 0xc8,
	0x6f, 0xd3, 0x80, 0xfb, 0xbb, 0x2a, 0x23, 0xa0, 0xce, 0x70, 0x25, 0xdb, 0xd1, 0xa0, 0xe2, 0x6c,
	0x7a, 0xa0, 0xaf, 0xe1, 0x7b, 0x17, 0x68, 0x41, 0x2d, 0xc6, 0x24, 0x0d, 0xf8, 0x96, 0x1e, 0x8b,
	0x1a, 0x8b, 0xb0, 0xf9, 0x01, 0x8e, 0xbb, 0x18, 0x20, 0xc7, 0xfd, 0xe5, 0xfb, 0x08, 0xcd, 0x02,
	0xba, 0x77, 0xcb, 0x7e, 0xc2, 0xf1, 0x10, 0x59, 0x3c, 0xf9, 0xbe, 0x8b, 0xd6, 0x82, 0x9a, 0xe7,
	0x07, 0x1c, 0xe3, 0xa7, 0xa6, 0xb5, 0x08, 0x67, 0x6b, 0xc0, 0xa3, 0x19, 0x86, 0x86, 0x22, 0xd7,
	0x40, 0x18, 0x99, 0x37, 0xf0, 0xe7, 0x3e, 0x37, 0xd4, 0x4e, 0xc5, 0x3a, 0xa0, 0xd2, 0x30, 0x7f,
	0x43, 0xb3, 0xa0, 0xdf, 0x5b, 0xdb, 0x6c, 0x2d, 0x38, 0xce, 0x9f, 0x52, 0x56, 0x06, 0xc9, 0x4b,
	0x80, 0x10, 0x97, 0x7c, 0x54, 0x2e, 0xe9, 0x28, 0xf3, 0xdc, 0x65, 0x8e, 0xf3, 0x37, 0xd0, 0x28,
	0xff, 0x16, 0x44, 0x83, 0x6a, 0xff, 0xab, 0xfe, 0x8c, 0x9c, 0x40, 0xbd, 0x7f, 0x77, 0x73, 0x4d,
	0x47, 0xd7, 0x94, 0xf6, 0xa9, 0x5e, 0x71, 0xfe, 0x54, 0xe1, 0xf8, 0x16, 0x39, 0xeb, 0x5e, 0x0d,
	0xe5, 0x9f, 0x45, 0x1c, 0x50, 0x06, 0x29, 0x27, 0xad, 0x92, 0x0e, 0x0f, 0xfb, 0xd7, 0x7e, 0xfe,
	0xc8, 0x9b, 0xbf, 0xce, 0x01, 0xa5, 0x87, 0x1b, 0x98, 0xf5, 0xc2, 0x94, 0x31, 0xe5, 0x75, 0xb8,
	0x84, 0xc3, 0x62, 0x02, 0xc9, 0xd9, 0x46, 0x4a, 0x79, 0xa8, 0xdb, 0xed, 0x6d, 0xa1, 0xfc, 0x8a,
	0x4f, 0xa0, 0xc9, 0x09, 0x21, 0x2f, 0x4a, 0x2a, 0x95, 0xc7, 0xad, 0x6d, 0xfc, 0x1b, 0x58, 0x83,
	0x65, 0x8f, 0xca, 0xe0, 0x8d, 0xa1, 0x29, 0x83, 0x37, 0xdb, 0x39, 0xd6, 0xc4, 0x27, 0xfa, 0xf6,
	0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xee, 0x0c, 0xd9, 0xf2, 0xed, 0x05, 0x00, 0x00,
}
