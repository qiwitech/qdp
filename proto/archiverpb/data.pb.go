// Code generated by protoc-gen-gogo.
// source: data.proto
// DO NOT EDIT!

/*
Package archiverpb is a generated protocol buffer package.

It is generated from these files:
	data.proto

It has these top-level messages:
	Txn
	Settings
*/
package archiverpb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Direction int32

const (
	Direction_INPUT  Direction = 0
	Direction_OUTPUT Direction = 1
)

var Direction_name = map[int32]string{
	0: "INPUT",
	1: "OUTPUT",
}
var Direction_value = map[string]int32{
	"INPUT":  0,
	"OUTPUT": 1,
}

func (x Direction) String() string {
	return proto.EnumName(Direction_name, int32(x))
}
func (Direction) EnumDescriptor() ([]byte, []int) { return fileDescriptorData, []int{0} }

type Txn struct {
	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Sender     string `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	Receiver   string `protobuf:"bytes,3,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Amount     string `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Balance    string `protobuf:"bytes,5,opt,name=balance,proto3" json:"balance,omitempty"`
	SpentBy    string `protobuf:"bytes,6,opt,name=spent_by,json=spentBy,proto3" json:"spent_by,omitempty"`
	SettingsId string `protobuf:"bytes,7,opt,name=settings_id,json=settingsId,proto3" json:"settings_id,omitempty"`
	PrevHash   string `protobuf:"bytes,8,opt,name=prev_hash,json=prevHash,proto3" json:"prev_hash,omitempty"`
	Hash       string `protobuf:"bytes,9,opt,name=hash,proto3" json:"hash,omitempty"`
	Sign       string `protobuf:"bytes,10,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (m *Txn) Reset()                    { *m = Txn{} }
func (m *Txn) String() string            { return proto.CompactTextString(m) }
func (*Txn) ProtoMessage()               {}
func (*Txn) Descriptor() ([]byte, []int) { return fileDescriptorData, []int{0} }

func (m *Txn) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Txn) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *Txn) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

func (m *Txn) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *Txn) GetBalance() string {
	if m != nil {
		return m.Balance
	}
	return ""
}

func (m *Txn) GetSpentBy() string {
	if m != nil {
		return m.SpentBy
	}
	return ""
}

func (m *Txn) GetSettingsId() string {
	if m != nil {
		return m.SettingsId
	}
	return ""
}

func (m *Txn) GetPrevHash() string {
	if m != nil {
		return m.PrevHash
	}
	return ""
}

func (m *Txn) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Txn) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

type Settings struct {
	Id                 string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Account            string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	PrevHash           string `protobuf:"bytes,3,opt,name=prev_hash,json=prevHash,proto3" json:"prev_hash,omitempty"`
	Hash               string `protobuf:"bytes,4,opt,name=hash,proto3" json:"hash,omitempty"`
	PublicKey          string `protobuf:"bytes,5,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	DataHash           string `protobuf:"bytes,6,opt,name=data_hash,json=dataHash,proto3" json:"data_hash,omitempty"`
	Sign               string `protobuf:"bytes,7,opt,name=sign,proto3" json:"sign,omitempty"`
	VerifyTransferSign bool   `protobuf:"varint,8,opt,name=verify_transfer_sign,json=verifyTransferSign,proto3" json:"verify_transfer_sign,omitempty"`
}

func (m *Settings) Reset()                    { *m = Settings{} }
func (m *Settings) String() string            { return proto.CompactTextString(m) }
func (*Settings) ProtoMessage()               {}
func (*Settings) Descriptor() ([]byte, []int) { return fileDescriptorData, []int{1} }

func (m *Settings) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Settings) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *Settings) GetPrevHash() string {
	if m != nil {
		return m.PrevHash
	}
	return ""
}

func (m *Settings) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Settings) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *Settings) GetDataHash() string {
	if m != nil {
		return m.DataHash
	}
	return ""
}

func (m *Settings) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

func (m *Settings) GetVerifyTransferSign() bool {
	if m != nil {
		return m.VerifyTransferSign
	}
	return false
}

func init() {
	proto.RegisterType((*Txn)(nil), "archiverpb.Txn")
	proto.RegisterType((*Settings)(nil), "archiverpb.Settings")
	proto.RegisterEnum("archiverpb.Direction", Direction_name, Direction_value)
}

func init() { proto.RegisterFile("data.proto", fileDescriptorData) }

var fileDescriptorData = []byte{
	// 337 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xcb, 0x4a, 0xc3, 0x40,
	0x14, 0x86, 0x4d, 0x2f, 0xb9, 0x1c, 0x41, 0xe4, 0x20, 0x32, 0x2a, 0xa2, 0x74, 0x25, 0x2e, 0x44,
	0xf0, 0x0d, 0xc4, 0x45, 0x8b, 0xa0, 0xd2, 0xa6, 0xeb, 0x30, 0x49, 0x4e, 0x9b, 0xc1, 0x3a, 0x09,
	0x33, 0xd3, 0x62, 0x9e, 0xd8, 0x97, 0x70, 0x21, 0x33, 0x93, 0x6a, 0x45, 0xdc, 0x9d, 0xff, 0xfb,
	0x73, 0x2e, 0xf9, 0x13, 0x80, 0x92, 0x1b, 0x7e, 0xd3, 0xa8, 0xda, 0xd4, 0x08, 0x5c, 0x15, 0x95,
	0xd8, 0x90, 0x6a, 0xf2, 0xd1, 0x67, 0x00, 0xfd, 0xf4, 0x5d, 0xe2, 0x01, 0xf4, 0x44, 0xc9, 0x82,
	0xcb, 0xe0, 0x2a, 0x99, 0xf6, 0x44, 0x89, 0xc7, 0x10, 0x6a, 0x92, 0x25, 0x29, 0xd6, 0x73, 0xac,
	0x53, 0x78, 0x0a, 0xb1, 0xa2, 0x82, 0x6c, 0x37, 0xeb, 0x3b, 0xe7, 0x5b, 0xdb, 0x1e, 0xfe, 0x56,
	0xaf, 0xa5, 0x61, 0x03, 0xdf, 0xe3, 0x15, 0x32, 0x88, 0x72, 0xbe, 0xe2, 0xb2, 0x20, 0x36, 0x74,
	0xc6, 0x56, 0xe2, 0x09, 0xc4, 0xba, 0x21, 0x69, 0xb2, 0xbc, 0x65, 0xa1, 0xb7, 0x9c, 0xbe, 0x6f,
	0xf1, 0x02, 0xf6, 0x35, 0x19, 0x23, 0xe4, 0x52, 0x67, 0xa2, 0x64, 0x91, 0x73, 0x61, 0x8b, 0x26,
	0x25, 0x9e, 0x41, 0xd2, 0x28, 0xda, 0x64, 0x15, 0xd7, 0x15, 0x8b, 0xfd, 0x29, 0x16, 0x8c, 0xb9,
	0xae, 0x10, 0x61, 0xe0, 0x78, 0xe2, 0xb8, 0xab, 0x2d, 0xd3, 0x62, 0x29, 0x19, 0x78, 0x66, 0xeb,
	0xd1, 0x47, 0x00, 0xf1, 0xac, 0x9b, 0xf9, 0x27, 0x03, 0x06, 0x11, 0x2f, 0x0a, 0xf7, 0x42, 0x3e,
	0x84, 0xad, 0xfc, 0xbd, 0xbb, 0xff, 0xcf, 0xee, 0xc1, 0xce, 0xee, 0x73, 0x80, 0x66, 0x9d, 0xaf,
	0x44, 0x91, 0xbd, 0x52, 0xdb, 0xa5, 0x90, 0x78, 0xf2, 0x48, 0xad, 0x9d, 0x67, 0xbf, 0x8f, 0x9f,
	0xe7, 0x83, 0x88, 0x2d, 0x18, 0xef, 0xde, 0x1d, 0xfd, 0xdc, 0x8d, 0xb7, 0x70, 0xb4, 0x21, 0x25,
	0x16, 0x6d, 0x66, 0x14, 0x97, 0x7a, 0x41, 0x2a, 0x73, 0xcf, 0xd8, 0x1c, 0xe2, 0x29, 0x7a, 0x2f,
	0xed, 0xac, 0x99, 0x58, 0xca, 0xeb, 0x11, 0x24, 0x0f, 0x42, 0x51, 0x61, 0x44, 0x2d, 0x31, 0x81,
	0xe1, 0xe4, 0xe9, 0x65, 0x9e, 0x1e, 0xee, 0x21, 0x40, 0xf8, 0x3c, 0x4f, 0x6d, 0x1d, 0xe4, 0xa1,
	0xfb, 0x3f, 0xee, 0xbe, 0x02, 0x00, 0x00, 0xff, 0xff, 0x01, 0x4e, 0x98, 0xfd, 0x2d, 0x02, 0x00,
	0x00,
}
