// Code generated by protoc-gen-gogo.
// source: db_service.proto
// DO NOT EDIT!

/*
Package plutodbpb is a generated protocol buffer package.

PlutoDB Service


It is generated from these files:
	db_service.proto

It has these top-level messages:
	Status
	GetHistoryRequest
	GetHistoryResponse
	FetchRequest
	FetchResponse
	GetTxnMultiRequest
	GetTxnMultiResponse
*/
package plutodbpb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"
import chain "github.com/qiwitech/qdp/proto/chainpb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type DBStatusCode int32

const (
	DBStatusCode_OK            DBStatusCode = 0
	DBStatusCode_INVALID_TOKEN DBStatusCode = 1
	DBStatusCode_OTHER_ERROR   DBStatusCode = 2
)

var DBStatusCode_name = map[int32]string{
	0: "OK",
	1: "INVALID_TOKEN",
	2: "OTHER_ERROR",
}
var DBStatusCode_value = map[string]int32{
	"OK":            0,
	"INVALID_TOKEN": 1,
	"OTHER_ERROR":   2,
}

func (x DBStatusCode) String() string {
	return proto.EnumName(DBStatusCode_name, int32(x))
}
func (DBStatusCode) EnumDescriptor() ([]byte, []int) { return fileDescriptorDbService, []int{0} }

type Status struct {
	// A simple error code that can be easily handled by the client.
	Code DBStatusCode `protobuf:"varint,1,opt,name=code,proto3,enum=plutodbpb.DBStatusCode" json:"code,omitempty"`
	// A developer-facing human-readable error message in English. It should
	// both explain the error and offer an actionable resolution to it.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Additional error information that the client code can use to handle
	// the error, such as retry delay or a help link.
	Details []*google_protobuf.Any `protobuf:"bytes,3,rep,name=details" json:"details,omitempty"`
}

func (m *Status) Reset()                    { *m = Status{} }
func (m *Status) String() string            { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()               {}
func (*Status) Descriptor() ([]byte, []int) { return fileDescriptorDbService, []int{0} }

func (m *Status) GetCode() DBStatusCode {
	if m != nil {
		return m.Code
	}
	return DBStatusCode_OK
}

func (m *Status) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Status) GetDetails() []*google_protobuf.Any {
	if m != nil {
		return m.Details
	}
	return nil
}

type GetHistoryRequest struct {
	Account uint64 `protobuf:"varint,1,opt,name=account,proto3" json:"account,omitempty"`
	Limit   uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Token   string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (m *GetHistoryRequest) Reset()                    { *m = GetHistoryRequest{} }
func (m *GetHistoryRequest) String() string            { return proto.CompactTextString(m) }
func (*GetHistoryRequest) ProtoMessage()               {}
func (*GetHistoryRequest) Descriptor() ([]byte, []int) { return fileDescriptorDbService, []int{1} }

func (m *GetHistoryRequest) GetAccount() uint64 {
	if m != nil {
		return m.Account
	}
	return 0
}

func (m *GetHistoryRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetHistoryRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type GetHistoryResponse struct {
	Status *Status      `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Txns   []*chain.Txn `protobuf:"bytes,2,rep,name=txns" json:"txns,omitempty"`
	Token  string       `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (m *GetHistoryResponse) Reset()                    { *m = GetHistoryResponse{} }
func (m *GetHistoryResponse) String() string            { return proto.CompactTextString(m) }
func (*GetHistoryResponse) ProtoMessage()               {}
func (*GetHistoryResponse) Descriptor() ([]byte, []int) { return fileDescriptorDbService, []int{2} }

func (m *GetHistoryResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetHistoryResponse) GetTxns() []*chain.Txn {
	if m != nil {
		return m.Txns
	}
	return nil
}

func (m *GetHistoryResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type FetchRequest struct {
	Account uint64 `protobuf:"varint,1,opt,name=account,proto3" json:"account,omitempty"`
	Limit   uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (m *FetchRequest) Reset()                    { *m = FetchRequest{} }
func (m *FetchRequest) String() string            { return proto.CompactTextString(m) }
func (*FetchRequest) ProtoMessage()               {}
func (*FetchRequest) Descriptor() ([]byte, []int) { return fileDescriptorDbService, []int{3} }

func (m *FetchRequest) GetAccount() uint64 {
	if m != nil {
		return m.Account
	}
	return 0
}

func (m *FetchRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type FetchResponse struct {
	Status   *Status         `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Txns     []*chain.Txn    `protobuf:"bytes,2,rep,name=txns" json:"txns,omitempty"`
	Settings *chain.Settings `protobuf:"bytes,3,opt,name=settings" json:"settings,omitempty"`
}

func (m *FetchResponse) Reset()                    { *m = FetchResponse{} }
func (m *FetchResponse) String() string            { return proto.CompactTextString(m) }
func (*FetchResponse) ProtoMessage()               {}
func (*FetchResponse) Descriptor() ([]byte, []int) { return fileDescriptorDbService, []int{4} }

func (m *FetchResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *FetchResponse) GetTxns() []*chain.Txn {
	if m != nil {
		return m.Txns
	}
	return nil
}

func (m *FetchResponse) GetSettings() *chain.Settings {
	if m != nil {
		return m.Settings
	}
	return nil
}

type GetTxnMultiRequest struct {
	IDs []*chain.TxnID `protobuf:"bytes,1,rep,name=IDs" json:"IDs,omitempty"`
}

func (m *GetTxnMultiRequest) Reset()                    { *m = GetTxnMultiRequest{} }
func (m *GetTxnMultiRequest) String() string            { return proto.CompactTextString(m) }
func (*GetTxnMultiRequest) ProtoMessage()               {}
func (*GetTxnMultiRequest) Descriptor() ([]byte, []int) { return fileDescriptorDbService, []int{5} }

func (m *GetTxnMultiRequest) GetIDs() []*chain.TxnID {
	if m != nil {
		return m.IDs
	}
	return nil
}

type GetTxnMultiResponse struct {
	Status *Status      `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Txns   []*chain.Txn `protobuf:"bytes,2,rep,name=txns" json:"txns,omitempty"`
}

func (m *GetTxnMultiResponse) Reset()                    { *m = GetTxnMultiResponse{} }
func (m *GetTxnMultiResponse) String() string            { return proto.CompactTextString(m) }
func (*GetTxnMultiResponse) ProtoMessage()               {}
func (*GetTxnMultiResponse) Descriptor() ([]byte, []int) { return fileDescriptorDbService, []int{6} }

func (m *GetTxnMultiResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetTxnMultiResponse) GetTxns() []*chain.Txn {
	if m != nil {
		return m.Txns
	}
	return nil
}

func init() {
	proto.RegisterType((*Status)(nil), "plutodbpb.Status")
	proto.RegisterType((*GetHistoryRequest)(nil), "plutodbpb.GetHistoryRequest")
	proto.RegisterType((*GetHistoryResponse)(nil), "plutodbpb.GetHistoryResponse")
	proto.RegisterType((*FetchRequest)(nil), "plutodbpb.FetchRequest")
	proto.RegisterType((*FetchResponse)(nil), "plutodbpb.FetchResponse")
	proto.RegisterType((*GetTxnMultiRequest)(nil), "plutodbpb.GetTxnMultiRequest")
	proto.RegisterType((*GetTxnMultiResponse)(nil), "plutodbpb.GetTxnMultiResponse")
	proto.RegisterEnum("plutodbpb.DBStatusCode", DBStatusCode_name, DBStatusCode_value)
}

func init() { proto.RegisterFile("db_service.proto", fileDescriptorDbService) }

var fileDescriptorDbService = []byte{
	// 505 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xc5, 0x49, 0x9a, 0xd2, 0x49, 0xd2, 0x26, 0x4b, 0x25, 0x4c, 0x04, 0x51, 0xe4, 0x53, 0xa0,
	0x92, 0x23, 0x05, 0xb8, 0xf4, 0x80, 0xd4, 0xe2, 0x40, 0xad, 0x96, 0x06, 0x6d, 0x22, 0x24, 0x4e,
	0xc1, 0x1f, 0x5b, 0x67, 0x55, 0x67, 0xd7, 0x64, 0xd7, 0x28, 0x39, 0x71, 0xe4, 0x97, 0xf2, 0x3f,
	0x90, 0x77, 0xed, 0xd6, 0xb4, 0xca, 0xa5, 0xea, 0xc9, 0x9a, 0x9d, 0x37, 0xf3, 0xde, 0x1b, 0xcf,
	0x40, 0x3b, 0xf4, 0xe7, 0x82, 0xac, 0x7e, 0xd1, 0x80, 0xd8, 0xc9, 0x8a, 0x4b, 0x8e, 0xf6, 0x92,
	0x38, 0x95, 0x3c, 0xf4, 0x13, 0xbf, 0xfb, 0x22, 0xe2, 0x3c, 0x8a, 0xc9, 0x50, 0x25, 0xfc, 0xf4,
	0x6a, 0xe8, 0xb1, 0x8d, 0x46, 0x75, 0xdf, 0x47, 0x54, 0x2e, 0x52, 0xdf, 0x0e, 0xf8, 0x72, 0xc8,
	0xe8, 0xb5, 0xc7, 0xc2, 0x2b, 0xbe, 0x1a, 0xaa, 0x52, 0xa1, 0xf1, 0xc3, 0x60, 0xe1, 0x51, 0x96,
	0xf8, 0xfa, 0xab, 0xcb, 0xac, 0xdf, 0x50, 0x9f, 0x4a, 0x4f, 0xa6, 0x02, 0x1d, 0x41, 0x2d, 0xe0,
	0x21, 0x31, 0x8d, 0xbe, 0x31, 0xd8, 0x1f, 0x3d, 0xb7, 0x6f, 0x58, 0x6d, 0xe7, 0x54, 0x43, 0x3e,
	0xf2, 0x90, 0x60, 0x05, 0x42, 0x26, 0xec, 0x2e, 0x89, 0x10, 0x5e, 0x44, 0xcc, 0x4a, 0xdf, 0x18,
	0xec, 0xe1, 0x22, 0x44, 0x36, 0xec, 0x86, 0x44, 0x7a, 0x34, 0x16, 0x66, 0xb5, 0x5f, 0x1d, 0x34,
	0x46, 0x87, 0xb6, 0x16, 0x6d, 0x17, 0xa2, 0xed, 0x13, 0xb6, 0xc1, 0x05, 0xc8, 0xfa, 0x0e, 0x9d,
	0xcf, 0x44, 0x9e, 0x51, 0x21, 0xf9, 0x6a, 0x83, 0xc9, 0xcf, 0x94, 0x08, 0x99, 0xb5, 0xf7, 0x82,
	0x80, 0xa7, 0x4c, 0x2a, 0x39, 0x35, 0x5c, 0x84, 0xe8, 0x10, 0x76, 0x62, 0xba, 0xa4, 0x52, 0xd1,
	0xb6, 0xb0, 0x0e, 0xb2, 0x57, 0xc9, 0xaf, 0x09, 0x33, 0xab, 0x4a, 0x8c, 0x0e, 0xac, 0x14, 0x50,
	0xb9, 0xb5, 0x48, 0x38, 0x13, 0x04, 0xbd, 0x86, 0xba, 0x50, 0x76, 0x54, 0xeb, 0xc6, 0xa8, 0x53,
	0x72, 0xaa, 0x7d, 0xe2, 0x1c, 0x80, 0x7a, 0x50, 0x93, 0x6b, 0x26, 0xcc, 0x8a, 0x32, 0x02, 0xb6,
	0x1e, 0xdc, 0x6c, 0xcd, 0xb0, 0x7a, 0xdf, 0x42, 0xfb, 0x01, 0x9a, 0x9f, 0x88, 0x0c, 0x16, 0x0f,
	0x34, 0x63, 0xfd, 0x31, 0xa0, 0x95, 0x37, 0x78, 0x7c, 0xc9, 0x47, 0xf0, 0x54, 0x10, 0x29, 0x29,
	0x8b, 0x84, 0x52, 0xdd, 0x18, 0x1d, 0xe4, 0x98, 0x69, 0xfe, 0x8c, 0x6f, 0x00, 0xd6, 0x3b, 0x35,
	0xc0, 0xd9, 0x9a, 0x7d, 0x49, 0x63, 0x49, 0x0b, 0x3f, 0x3d, 0xa8, 0xba, 0x4e, 0x26, 0x25, 0x63,
	0x68, 0xde, 0x32, 0xb8, 0x0e, 0xce, 0x12, 0xd6, 0x0f, 0x78, 0xf6, 0x5f, 0xd5, 0xa3, 0x9b, 0x78,
	0x73, 0x0c, 0xcd, 0xf2, 0x4e, 0xa2, 0x3a, 0x54, 0x26, 0xe7, 0xed, 0x27, 0xa8, 0x03, 0x2d, 0xf7,
	0xf2, 0xdb, 0xc9, 0x85, 0xeb, 0xcc, 0x67, 0x93, 0xf3, 0xf1, 0x65, 0xdb, 0x40, 0x07, 0xd0, 0x98,
	0xcc, 0xce, 0xc6, 0x78, 0x3e, 0xc6, 0x78, 0x82, 0xdb, 0x95, 0xd1, 0x5f, 0x03, 0xf6, 0xbf, 0x66,
	0xc4, 0xce, 0xe9, 0x54, 0x9f, 0x19, 0x72, 0x01, 0x6e, 0xf7, 0x04, 0xbd, 0x2c, 0xe9, 0xba, 0xb7,
	0x99, 0xdd, 0x57, 0x5b, 0xb2, 0xb9, 0xc9, 0x63, 0xd8, 0x51, 0xbf, 0x0e, 0x95, 0xef, 0xa7, 0xbc,
	0x0d, 0x5d, 0xf3, 0x7e, 0x22, 0xaf, 0xbd, 0x80, 0x46, 0x69, 0x6e, 0xe8, 0x0e, 0xd3, 0x9d, 0xbf,
	0xd0, 0xed, 0x6d, 0x4b, 0xeb, 0x6e, 0x7e, 0x5d, 0x9d, 0xdb, 0xdb, 0x7f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0xc7, 0xe9, 0xb5, 0x7b, 0x50, 0x04, 0x00, 0x00,
}
