// Code generated by protoc-gen-gogo.
// source: gate_service.proto
// DO NOT EDIT!

/*
Package gatepb is a generated protocol buffer package.

Gate Service

Gate API consists of a single service which operate accounts, account
settings and funds.

It is generated from these files:
	gate_service.proto

It has these top-level messages:
	Status
	RouteMap
	TestRouteMapAnotherType
	TransferItem
	TransferRequest
	TransferResponse
	GetPrevHashRequest
	GetPrevHashResponse
	GetBalanceRequest
	GetBalanceResponse
	SettingsRequest
	SettingsResponse
	GetLastSettingsRequest
	GetLastSettingsResponse
*/
package gatepb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type TransferCode int32

const (
	TransferCode_OK                TransferCode = 0
	TransferCode_INVALID_PREV_HASH TransferCode = 1
	TransferCode_INVALID_SIGN      TransferCode = 2
	TransferCode_BAD_REQUEST       TransferCode = 3
	TransferCode_NO_BALANCE        TransferCode = 4
	TransferCode_INTERNAL_ERROR    TransferCode = 5
	TransferCode_SEE_OTHER         TransferCode = 6
	TransferCode_RETRY             TransferCode = 7
)

var TransferCode_name = map[int32]string{
	0: "OK",
	1: "INVALID_PREV_HASH",
	2: "INVALID_SIGN",
	3: "BAD_REQUEST",
	4: "NO_BALANCE",
	5: "INTERNAL_ERROR",
	6: "SEE_OTHER",
	7: "RETRY",
}
var TransferCode_value = map[string]int32{
	"OK":                0,
	"INVALID_PREV_HASH": 1,
	"INVALID_SIGN":      2,
	"BAD_REQUEST":       3,
	"NO_BALANCE":        4,
	"INTERNAL_ERROR":    5,
	"SEE_OTHER":         6,
	"RETRY":             7,
}

func (x TransferCode) String() string {
	return proto.EnumName(TransferCode_name, int32(x))
}
func (TransferCode) EnumDescriptor() ([]byte, []int) { return fileDescriptorGateService, []int{0} }

type Status struct {
	// A simple error code that can be easily handled by the client.
	Code TransferCode `protobuf:"varint,1,opt,name=code,proto3,enum=gate.TransferCode" json:"code,omitempty"`
	// A developer-facing human-readable error message in English. It should
	// both explain the error and offer an actionable resolution to it.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Additional error information that the client code can use to handle
	// the error, such as retry delay or a help link.
	Details []*google_protobuf.Any `protobuf:"bytes,3,rep,name=details" json:"details,omitempty"`
}

func (m *Status) Reset()                    { *m = Status{} }
func (m *Status) String() string            { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()               {}
func (*Status) Descriptor() ([]byte, []int) { return fileDescriptorGateService, []int{0} }

func (m *Status) GetCode() TransferCode {
	if m != nil {
		return m.Code
	}
	return TransferCode_OK
}

func (m *Status) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Status) GetDetails() []*google_protobuf.Any {
	if m != nil {
		return m.Details
	}
	return nil
}

type RouteMap struct {
	// TODO: type switch - ketama,gossip,etc...
	Type    uint32   `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Version uint32   `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Target  string   `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	Nodes   []string `protobuf:"bytes,4,rep,name=nodes" json:"nodes,omitempty"`
}

func (m *RouteMap) Reset()                    { *m = RouteMap{} }
func (m *RouteMap) String() string            { return proto.CompactTextString(m) }
func (*RouteMap) ProtoMessage()               {}
func (*RouteMap) Descriptor() ([]byte, []int) { return fileDescriptorGateService, []int{1} }

func (m *RouteMap) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *RouteMap) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *RouteMap) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *RouteMap) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type TestRouteMapAnotherType struct {
	Type    uint32   `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Version uint32   `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Target  string   `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	Nodes   []string `protobuf:"bytes,4,rep,name=nodes" json:"nodes,omitempty"`
}

func (m *TestRouteMapAnotherType) Reset()         { *m = TestRouteMapAnotherType{} }
func (m *TestRouteMapAnotherType) String() string { return proto.CompactTextString(m) }
func (*TestRouteMapAnotherType) ProtoMessage()    {}
func (*TestRouteMapAnotherType) Descriptor() ([]byte, []int) {
	return fileDescriptorGateService, []int{2}
}

func (m *TestRouteMapAnotherType) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *TestRouteMapAnotherType) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *TestRouteMapAnotherType) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *TestRouteMapAnotherType) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type TransferItem struct {
	Receiver uint64 `protobuf:"varint,1,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Amount   int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (m *TransferItem) Reset()                    { *m = TransferItem{} }
func (m *TransferItem) String() string            { return proto.CompactTextString(m) }
func (*TransferItem) ProtoMessage()               {}
func (*TransferItem) Descriptor() ([]byte, []int) { return fileDescriptorGateService, []int{3} }

func (m *TransferItem) GetReceiver() uint64 {
	if m != nil {
		return m.Receiver
	}
	return 0
}

func (m *TransferItem) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type TransferRequest struct {
	Sender uint64 `protobuf:"varint,1,opt,name=sender,proto3" json:"sender,omitempty"`
	// List of receiver IDs and amounts
	Batch []*TransferItem `protobuf:"bytes,2,rep,name=batch" json:"batch,omitempty"`
	// ID of actual account settings
	SettingsId uint64 `protobuf:"varint,3,opt,name=settings_id,json=settingsId,proto3" json:"settings_id,omitempty"`
	// Hash sum of the previous transaction (omit or "" if first)
	PrevHash string `protobuf:"bytes,4,opt,name=prev_hash,json=prevHash,proto3" json:"prev_hash,omitempty"`
	Sign     string `protobuf:"bytes,5,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (m *TransferRequest) Reset()                    { *m = TransferRequest{} }
func (m *TransferRequest) String() string            { return proto.CompactTextString(m) }
func (*TransferRequest) ProtoMessage()               {}
func (*TransferRequest) Descriptor() ([]byte, []int) { return fileDescriptorGateService, []int{4} }

func (m *TransferRequest) GetSender() uint64 {
	if m != nil {
		return m.Sender
	}
	return 0
}

func (m *TransferRequest) GetBatch() []*TransferItem {
	if m != nil {
		return m.Batch
	}
	return nil
}

func (m *TransferRequest) GetSettingsId() uint64 {
	if m != nil {
		return m.SettingsId
	}
	return 0
}

func (m *TransferRequest) GetPrevHash() string {
	if m != nil {
		return m.PrevHash
	}
	return ""
}

func (m *TransferRequest) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

type TransferResponse struct {
	Status     *Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	TxnId      string  `protobuf:"bytes,2,opt,name=txn_id,json=txnId,proto3" json:"txn_id,omitempty"`
	Hash       string  `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	Account    uint64  `protobuf:"varint,4,opt,name=account,proto3" json:"account,omitempty"`
	Id         uint64  `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
	SettingsId uint64  `protobuf:"varint,6,opt,name=settings_id,json=settingsId,proto3" json:"settings_id,omitempty"`
}

func (m *TransferResponse) Reset()                    { *m = TransferResponse{} }
func (m *TransferResponse) String() string            { return proto.CompactTextString(m) }
func (*TransferResponse) ProtoMessage()               {}
func (*TransferResponse) Descriptor() ([]byte, []int) { return fileDescriptorGateService, []int{5} }

func (m *TransferResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *TransferResponse) GetTxnId() string {
	if m != nil {
		return m.TxnId
	}
	return ""
}

func (m *TransferResponse) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *TransferResponse) GetAccount() uint64 {
	if m != nil {
		return m.Account
	}
	return 0
}

func (m *TransferResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TransferResponse) GetSettingsId() uint64 {
	if m != nil {
		return m.SettingsId
	}
	return 0
}

type GetPrevHashRequest struct {
	Account uint64 `protobuf:"varint,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (m *GetPrevHashRequest) Reset()                    { *m = GetPrevHashRequest{} }
func (m *GetPrevHashRequest) String() string            { return proto.CompactTextString(m) }
func (*GetPrevHashRequest) ProtoMessage()               {}
func (*GetPrevHashRequest) Descriptor() ([]byte, []int) { return fileDescriptorGateService, []int{6} }

func (m *GetPrevHashRequest) GetAccount() uint64 {
	if m != nil {
		return m.Account
	}
	return 0
}

type GetPrevHashResponse struct {
	Status *Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Hash   string  `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (m *GetPrevHashResponse) Reset()                    { *m = GetPrevHashResponse{} }
func (m *GetPrevHashResponse) String() string            { return proto.CompactTextString(m) }
func (*GetPrevHashResponse) ProtoMessage()               {}
func (*GetPrevHashResponse) Descriptor() ([]byte, []int) { return fileDescriptorGateService, []int{7} }

func (m *GetPrevHashResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetPrevHashResponse) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type GetBalanceRequest struct {
	Account uint64 `protobuf:"varint,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (m *GetBalanceRequest) Reset()                    { *m = GetBalanceRequest{} }
func (m *GetBalanceRequest) String() string            { return proto.CompactTextString(m) }
func (*GetBalanceRequest) ProtoMessage()               {}
func (*GetBalanceRequest) Descriptor() ([]byte, []int) { return fileDescriptorGateService, []int{8} }

func (m *GetBalanceRequest) GetAccount() uint64 {
	if m != nil {
		return m.Account
	}
	return 0
}

type GetBalanceResponse struct {
	Status  *Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Balance int64   `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (m *GetBalanceResponse) Reset()                    { *m = GetBalanceResponse{} }
func (m *GetBalanceResponse) String() string            { return proto.CompactTextString(m) }
func (*GetBalanceResponse) ProtoMessage()               {}
func (*GetBalanceResponse) Descriptor() ([]byte, []int) { return fileDescriptorGateService, []int{9} }

func (m *GetBalanceResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetBalanceResponse) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

type SettingsRequest struct {
	Account            uint64 `protobuf:"varint,1,opt,name=account,proto3" json:"account,omitempty"`
	PublicKey          string `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	PrevHash           string `protobuf:"bytes,3,opt,name=prev_hash,json=prevHash,proto3" json:"prev_hash,omitempty"`
	DataHash           string `protobuf:"bytes,4,opt,name=data_hash,json=dataHash,proto3" json:"data_hash,omitempty"`
	Sign               string `protobuf:"bytes,5,opt,name=sign,proto3" json:"sign,omitempty"`
	VerifyTransferSign bool   `protobuf:"varint,6,opt,name=verify_transfer_sign,json=verifyTransferSign,proto3" json:"verify_transfer_sign,omitempty"`
}

func (m *SettingsRequest) Reset()                    { *m = SettingsRequest{} }
func (m *SettingsRequest) String() string            { return proto.CompactTextString(m) }
func (*SettingsRequest) ProtoMessage()               {}
func (*SettingsRequest) Descriptor() ([]byte, []int) { return fileDescriptorGateService, []int{10} }

func (m *SettingsRequest) GetAccount() uint64 {
	if m != nil {
		return m.Account
	}
	return 0
}

func (m *SettingsRequest) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *SettingsRequest) GetPrevHash() string {
	if m != nil {
		return m.PrevHash
	}
	return ""
}

func (m *SettingsRequest) GetDataHash() string {
	if m != nil {
		return m.DataHash
	}
	return ""
}

func (m *SettingsRequest) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

func (m *SettingsRequest) GetVerifyTransferSign() bool {
	if m != nil {
		return m.VerifyTransferSign
	}
	return false
}

type SettingsResponse struct {
	Status     *Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	SettingsId string  `protobuf:"bytes,2,opt,name=settings_id,json=settingsId,proto3" json:"settings_id,omitempty"`
	Hash       string  `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (m *SettingsResponse) Reset()                    { *m = SettingsResponse{} }
func (m *SettingsResponse) String() string            { return proto.CompactTextString(m) }
func (*SettingsResponse) ProtoMessage()               {}
func (*SettingsResponse) Descriptor() ([]byte, []int) { return fileDescriptorGateService, []int{11} }

func (m *SettingsResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *SettingsResponse) GetSettingsId() string {
	if m != nil {
		return m.SettingsId
	}
	return ""
}

func (m *SettingsResponse) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type GetLastSettingsRequest struct {
	Account uint64 `protobuf:"varint,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (m *GetLastSettingsRequest) Reset()         { *m = GetLastSettingsRequest{} }
func (m *GetLastSettingsRequest) String() string { return proto.CompactTextString(m) }
func (*GetLastSettingsRequest) ProtoMessage()    {}
func (*GetLastSettingsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorGateService, []int{12}
}

func (m *GetLastSettingsRequest) GetAccount() uint64 {
	if m != nil {
		return m.Account
	}
	return 0
}

type GetLastSettingsResponse struct {
	Status             *Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Id                 uint64  `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	Hash               string  `protobuf:"bytes,5,opt,name=hash,proto3" json:"hash,omitempty"`
	Account            uint64  `protobuf:"varint,6,opt,name=account,proto3" json:"account,omitempty"`
	PublicKey          string  `protobuf:"bytes,7,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	PrevHash           string  `protobuf:"bytes,8,opt,name=prev_hash,json=prevHash,proto3" json:"prev_hash,omitempty"`
	DataHash           string  `protobuf:"bytes,9,opt,name=data_hash,json=dataHash,proto3" json:"data_hash,omitempty"`
	Sign               string  `protobuf:"bytes,10,opt,name=sign,proto3" json:"sign,omitempty"`
	VerifyTransferSign bool    `protobuf:"varint,11,opt,name=verify_transfer_sign,json=verifyTransferSign,proto3" json:"verify_transfer_sign,omitempty"`
}

func (m *GetLastSettingsResponse) Reset()         { *m = GetLastSettingsResponse{} }
func (m *GetLastSettingsResponse) String() string { return proto.CompactTextString(m) }
func (*GetLastSettingsResponse) ProtoMessage()    {}
func (*GetLastSettingsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptorGateService, []int{13}
}

func (m *GetLastSettingsResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetLastSettingsResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetLastSettingsResponse) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *GetLastSettingsResponse) GetAccount() uint64 {
	if m != nil {
		return m.Account
	}
	return 0
}

func (m *GetLastSettingsResponse) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *GetLastSettingsResponse) GetPrevHash() string {
	if m != nil {
		return m.PrevHash
	}
	return ""
}

func (m *GetLastSettingsResponse) GetDataHash() string {
	if m != nil {
		return m.DataHash
	}
	return ""
}

func (m *GetLastSettingsResponse) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

func (m *GetLastSettingsResponse) GetVerifyTransferSign() bool {
	if m != nil {
		return m.VerifyTransferSign
	}
	return false
}

func init() {
	proto.RegisterType((*Status)(nil), "gate.Status")
	proto.RegisterType((*RouteMap)(nil), "gate.RouteMap")
	proto.RegisterType((*TestRouteMapAnotherType)(nil), "gate.TestRouteMapAnotherType")
	proto.RegisterType((*TransferItem)(nil), "gate.TransferItem")
	proto.RegisterType((*TransferRequest)(nil), "gate.TransferRequest")
	proto.RegisterType((*TransferResponse)(nil), "gate.TransferResponse")
	proto.RegisterType((*GetPrevHashRequest)(nil), "gate.GetPrevHashRequest")
	proto.RegisterType((*GetPrevHashResponse)(nil), "gate.GetPrevHashResponse")
	proto.RegisterType((*GetBalanceRequest)(nil), "gate.GetBalanceRequest")
	proto.RegisterType((*GetBalanceResponse)(nil), "gate.GetBalanceResponse")
	proto.RegisterType((*SettingsRequest)(nil), "gate.SettingsRequest")
	proto.RegisterType((*SettingsResponse)(nil), "gate.SettingsResponse")
	proto.RegisterType((*GetLastSettingsRequest)(nil), "gate.GetLastSettingsRequest")
	proto.RegisterType((*GetLastSettingsResponse)(nil), "gate.GetLastSettingsResponse")
	proto.RegisterEnum("gate.TransferCode", TransferCode_name, TransferCode_value)
}

func init() { proto.RegisterFile("gate_service.proto", fileDescriptorGateService) }

var fileDescriptorGateService = []byte{
	// 886 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xdd, 0x6e, 0xe2, 0x46,
	0x14, 0x2e, 0x60, 0x0c, 0x1c, 0x12, 0xf0, 0x9e, 0xe6, 0xc7, 0xcb, 0x76, 0xd5, 0xc8, 0xaa, 0x2a,
	0x54, 0xa9, 0x6c, 0x45, 0x1f, 0xa0, 0x85, 0x5d, 0x2b, 0x41, 0x9b, 0x42, 0x3a, 0xb0, 0x2b, 0xb5,
	0x37, 0xd6, 0x80, 0x4f, 0xc0, 0x6a, 0x62, 0x53, 0xcf, 0x80, 0x96, 0x3e, 0x44, 0x9f, 0xa0, 0xb7,
	0xbd, 0xed, 0x83, 0xf4, 0x51, 0xfa, 0x14, 0x95, 0xc7, 0x1e, 0x08, 0xe4, 0x67, 0x93, 0x8b, 0xbd,
	0xf3, 0xf9, 0xf1, 0x7c, 0xdf, 0x77, 0xce, 0xe7, 0x01, 0xc0, 0x29, 0x97, 0xe4, 0x09, 0x8a, 0x97,
	0xc1, 0x84, 0x5a, 0xf3, 0x38, 0x92, 0x11, 0x1a, 0x49, 0xae, 0xf1, 0x7c, 0x1a, 0x45, 0xd3, 0x2b,
	0x7a, 0xa5, 0x72, 0xe3, 0xc5, 0xe5, 0x2b, 0x1e, 0xae, 0xd2, 0x06, 0xe7, 0x0f, 0x30, 0x87, 0x92,
	0xcb, 0x85, 0xc0, 0xaf, 0xc1, 0x98, 0x44, 0x3e, 0xd9, 0xb9, 0x93, 0x5c, 0xb3, 0xd6, 0xc6, 0x56,
	0xf2, 0x66, 0x6b, 0x14, 0xf3, 0x50, 0x5c, 0x52, 0xfc, 0x3a, 0xf2, 0x89, 0xa9, 0x3a, 0xda, 0x50,
	0xba, 0x26, 0x21, 0xf8, 0x94, 0xec, 0xfc, 0x49, 0xae, 0x59, 0x61, 0x3a, 0xc4, 0x16, 0x94, 0x7c,
	0x92, 0x3c, 0xb8, 0x12, 0x76, 0xe1, 0xa4, 0xd0, 0xac, 0xb6, 0x0f, 0x5a, 0x29, 0x70, 0x4b, 0x03,
	0xb7, 0x3a, 0xe1, 0x8a, 0xe9, 0x26, 0xe7, 0x12, 0xca, 0x2c, 0x5a, 0x48, 0xfa, 0x89, 0xcf, 0x11,
	0xc1, 0x90, 0xab, 0x79, 0x8a, 0xbe, 0xcf, 0xd4, 0x73, 0x82, 0xb4, 0xa4, 0x58, 0x04, 0x51, 0xa8,
	0x90, 0xf6, 0x99, 0x0e, 0xf1, 0x08, 0x4c, 0xc9, 0xe3, 0x29, 0x49, 0xbb, 0xa0, 0x28, 0x64, 0x11,
	0x1e, 0x40, 0x31, 0x8c, 0x7c, 0x12, 0xb6, 0x71, 0x52, 0x68, 0x56, 0x58, 0x1a, 0x38, 0x0b, 0x38,
	0x1e, 0x91, 0x90, 0x1a, 0xab, 0x13, 0x46, 0x72, 0x46, 0xf1, 0x28, 0x81, 0xf8, 0x94, 0xb0, 0x5d,
	0xd8, 0xd3, 0xe3, 0xeb, 0x49, 0xba, 0xc6, 0x06, 0x94, 0x63, 0x9a, 0x50, 0xb0, 0xa4, 0x58, 0xe1,
	0x19, 0x6c, 0x1d, 0x27, 0x27, 0xf3, 0xeb, 0x68, 0x11, 0x4a, 0x05, 0x59, 0x60, 0x59, 0xe4, 0xfc,
	0x9d, 0x83, 0xba, 0x3e, 0x84, 0xd1, 0xef, 0x0b, 0x12, 0x32, 0xe9, 0x15, 0x14, 0xfa, 0xeb, 0x53,
	0xb2, 0x08, 0x9b, 0x50, 0x1c, 0x73, 0x39, 0x99, 0xd9, 0x79, 0x35, 0xfc, 0x9d, 0x0d, 0x26, 0x14,
	0x58, 0xda, 0x80, 0x5f, 0x42, 0x55, 0x90, 0x94, 0x41, 0x38, 0x15, 0x5e, 0xe0, 0x2b, 0x31, 0x06,
	0x03, 0x9d, 0xea, 0xf9, 0xf8, 0x02, 0x2a, 0xf3, 0x98, 0x96, 0xde, 0x8c, 0x8b, 0x99, 0x6d, 0x28,
	0xad, 0xe5, 0x24, 0x71, 0xc6, 0xc5, 0x2c, 0x99, 0x99, 0x08, 0xa6, 0xa1, 0x5d, 0x54, 0x79, 0xf5,
	0xec, 0xfc, 0x93, 0x03, 0x6b, 0xc3, 0x53, 0xcc, 0xa3, 0x50, 0x10, 0x7e, 0x05, 0xa6, 0x50, 0xde,
	0x52, 0x44, 0xab, 0xed, 0xbd, 0x94, 0x51, 0xea, 0x37, 0x96, 0xd5, 0xf0, 0x10, 0x4c, 0xf9, 0x21,
	0x4c, 0x78, 0xa4, 0x76, 0x2a, 0xca, 0x0f, 0x61, 0xcf, 0x4f, 0x50, 0x14, 0x7a, 0x3a, 0x69, 0xf5,
	0x9c, 0x6c, 0x86, 0x4f, 0x26, 0x6a, 0x4c, 0x86, 0xe2, 0xac, 0x43, 0xac, 0x41, 0x3e, 0xf0, 0x15,
	0x23, 0x83, 0xe5, 0x03, 0x7f, 0x57, 0xa1, 0xb9, 0xab, 0xd0, 0x69, 0x01, 0x9e, 0x92, 0xbc, 0xc8,
	0x34, 0xe9, 0xd1, 0xde, 0x00, 0xc8, 0x6d, 0x01, 0x38, 0x03, 0xf8, 0x7c, 0xab, 0xff, 0x49, 0x12,
	0xb5, 0x96, 0xfc, 0x46, 0x8b, 0xf3, 0x2d, 0x3c, 0x3b, 0x25, 0xd9, 0xe5, 0x57, 0x3c, 0x9c, 0xd0,
	0xc7, 0xf1, 0x47, 0x8a, 0xef, 0xba, 0xfd, 0x49, 0xf0, 0x36, 0x94, 0xc6, 0xe9, 0x8b, 0x99, 0xbb,
	0x74, 0xe8, 0xfc, 0x9b, 0x83, 0xfa, 0x30, 0x1b, 0xca, 0x47, 0x39, 0xe0, 0x4b, 0x80, 0xf9, 0x62,
	0x7c, 0x15, 0x4c, 0xbc, 0xdf, 0x68, 0x95, 0x89, 0xa9, 0xa4, 0x99, 0xb7, 0xb4, 0xda, 0x36, 0x4d,
	0x61, 0xc7, 0x34, 0x2f, 0xa0, 0xe2, 0x73, 0xc9, 0xb7, 0x1c, 0x95, 0x24, 0xee, 0x73, 0x14, 0x7e,
	0x07, 0x07, 0x4b, 0x8a, 0x83, 0xcb, 0x95, 0x27, 0x33, 0x5f, 0x79, 0xaa, 0x27, 0x59, 0x65, 0x99,
	0x61, 0x5a, 0xd3, 0x96, 0x1b, 0x26, 0x1e, 0xbc, 0x06, 0x6b, 0xa3, 0xe5, 0x49, 0x03, 0xda, 0x71,
	0x4b, 0xaa, 0xec, 0xe6, 0xf7, 0x70, 0x87, 0x19, 0x9d, 0x36, 0x1c, 0x9d, 0x92, 0x3c, 0xe7, 0x42,
	0x3e, 0x7a, 0x82, 0xce, 0x5f, 0x79, 0x38, 0xbe, 0xf5, 0xd2, 0x93, 0xa8, 0xa6, 0x46, 0x37, 0xd6,
	0x46, 0xd7, 0xcc, 0x8a, 0x77, 0x7f, 0x26, 0xe6, 0x43, 0x1b, 0x2c, 0x3d, 0xb8, 0xc1, 0xf2, 0x43,
	0x1b, 0xac, 0xdc, 0xb3, 0x41, 0x78, 0xc4, 0x06, 0xab, 0xf7, 0x6d, 0xf0, 0x9b, 0x3f, 0x73, 0x9b,
	0x2b, 0x33, 0xf9, 0xc5, 0x41, 0x13, 0xf2, 0x83, 0xb7, 0xd6, 0x67, 0x78, 0x08, 0xcf, 0x7a, 0xfd,
	0xf7, 0x9d, 0xf3, 0xde, 0x1b, 0xef, 0x82, 0xb9, 0xef, 0xbd, 0xb3, 0xce, 0xf0, 0xcc, 0xca, 0xa1,
	0x05, 0x7b, 0x3a, 0x3d, 0xec, 0x9d, 0xf6, 0xad, 0x3c, 0xd6, 0xa1, 0xda, 0xed, 0xbc, 0xf1, 0x98,
	0xfb, 0xf3, 0x3b, 0x77, 0x38, 0xb2, 0x0a, 0x58, 0x03, 0xe8, 0x0f, 0xbc, 0x6e, 0xe7, 0xbc, 0xd3,
	0x7f, 0xed, 0x5a, 0x06, 0x22, 0xd4, 0x7a, 0xfd, 0x91, 0xcb, 0xfa, 0x9d, 0x73, 0xcf, 0x65, 0x6c,
	0xc0, 0xac, 0x22, 0xee, 0x43, 0x65, 0xe8, 0xba, 0xde, 0x60, 0x74, 0xe6, 0x32, 0xcb, 0xc4, 0x0a,
	0x14, 0x99, 0x3b, 0x62, 0xbf, 0x58, 0xa5, 0xf6, 0x7f, 0x79, 0xb0, 0x2e, 0xe2, 0x68, 0x42, 0x42,
	0x44, 0xf1, 0x30, 0xfd, 0x65, 0xc5, 0x1f, 0xa1, 0x9e, 0xe5, 0x34, 0x57, 0x3c, 0xdc, 0xbe, 0x6b,
	0x33, 0x23, 0x34, 0x8e, 0x76, 0xd3, 0xd9, 0xaa, 0xbb, 0x50, 0xbd, 0x71, 0x99, 0xa0, 0x9d, 0xb6,
	0xdd, 0xbe, 0x8f, 0x1a, 0xcf, 0xef, 0xa8, 0x64, 0x67, 0xfc, 0x00, 0xb0, 0xb9, 0x10, 0xf0, 0x78,
	0xdd, 0xb8, 0x7d, 0xa3, 0x34, 0xec, 0xdb, 0x85, 0xf5, 0x01, 0xb5, 0x77, 0x73, 0x9f, 0x4b, 0xd2,
	0x4e, 0xd4, 0x2a, 0x76, 0xec, 0xac, 0x55, 0xdc, 0x32, 0x6c, 0x1f, 0xea, 0x3b, 0x5e, 0xc6, 0x2f,
	0xd6, 0x68, 0x77, 0x7c, 0x17, 0x8d, 0x97, 0xf7, 0x54, 0xd3, 0xf3, 0xba, 0xe5, 0x5f, 0xcd, 0xa4,
	0x3e, 0x1f, 0x8f, 0x4d, 0xf5, 0x7f, 0xe1, 0xfb, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0xbb, 0x36,
	0x7c, 0x4a, 0xd2, 0x08, 0x00, 0x00,
}
